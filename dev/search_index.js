var documenterSearchIndex = {"docs":
[{"location":"ElementaryMath/Exp-and-Log/Logarithms/#Logarithms","page":"Logarithms","title":"Logarithms","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/Logarithms/","page":"Logarithms","title":"Logarithms","text":"Base.log2\nBase.log10\nBase.log1p","category":"page"},{"location":"ElementaryMath/Exp-and-Log/Logarithms/#Base.log2","page":"Logarithms","title":"Base.log2","text":"log2(x)\n\nCompute the logarithm of x to base 2. Throws DomainError for negative Real arguments.\n\nSee also: exp2, ldexp, ispow2.\n\nExamples\n\njulia> log2(4)\n2.0\n\njulia> log2(10)\n3.321928094887362\n\njulia> log2(-2)\nERROR: DomainError with -2.0:\nlog2 was called with a negative real argument but will only return a complex result if called with a complex argument. Try log2(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(f::Symbol, x::Float64) at ./math.jl:31\n[...]\n\njulia> log2.(2.0 .^ (-1:1))\n3-element Vector{Float64}:\n -1.0\n  0.0\n  1.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Logarithms/#Base.log10","page":"Logarithms","title":"Base.log10","text":"log10(x)\n\nCompute the logarithm of x to base 10. Throws DomainError for negative Real arguments.\n\nExamples\n\njulia> log10(100)\n2.0\n\njulia> log10(2)\n0.3010299956639812\n\njulia> log10(-2)\nERROR: DomainError with -2.0:\nlog10 was called with a negative real argument but will only return a complex result if called with a complex argument. Try log10(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(f::Symbol, x::Float64) at ./math.jl:31\n[...]\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Logarithms/#Base.log1p","page":"Logarithms","title":"Base.log1p","text":"log1p(x)\n\nAccurate natural logarithm of 1+x. Throws DomainError for Real arguments less than -1.\n\nExamples\n\njulia> log1p(-0.5)\n-0.6931471805599453\n\njulia> log1p(0)\n0.0\n\njulia> log1p(-2)\nERROR: DomainError with -2.0:\nlog1p was called with a real argument < -1 but will only return a complex result if called with a complex argument. Try log1p(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at ./math.jl:31\n[...]\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/asin/#asin","page":"asin","title":"asin","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/asin/","page":"asin","title":"asin","text":"Base.asin","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/asin/#Base.asin","page":"asin","title":"Base.asin","text":"asin(x)\n\nCompute the inverse sine of x, where the output is in radians.\n\nSee also asind for output in degrees.\n\nExamples\n\njulia> asin.((0, 1/2, 1))\n(0.0, 0.5235987755982989, 1.5707963267948966)\n\njulia> asind.((0, 1/2, 1))\n(0.0, 30.000000000000004, 90.0)\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/asind/#asind","page":"asind","title":"asind","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/asind/","page":"asind","title":"asind","text":"Base.asind","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/asind/#Base.Math.asind","page":"asind","title":"Base.Math.asind","text":"asind(x)\n\nCompute the inverse sine of x, where the output is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/SinCos/sincosd/#sincosd","page":"sincosd","title":"sincosd","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/SinCos/sincosd/","page":"sincosd","title":"sincosd","text":"Base.sincosd","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/sincosd/#Base.Math.sincosd","page":"sincosd","title":"Base.Math.sincosd","text":"sincosd(x)\n\nSimultaneously compute the sine and cosine of x, where x is in degrees.\n\ncompat: Julia 1.3\nThis function requires at least Julia 1.3.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/#Function-Index","page":"Function Index","title":"Function Index","text":"","category":"section"},{"location":"ElementaryMath/","page":"Function Index","title":"Function Index","text":"NOTE: This list is auto-generated.","category":"page"},{"location":"ElementaryMath/","page":"Function Index","title":"Function Index","text":"","category":"page"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Discrete-Math","page":"Discrete Math","title":"Discrete Math","text":"","category":"section"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/","page":"Discrete Math","title":"Discrete Math","text":"factorial\ngcd\ngcdx\nlcm\nbinomial\nfactorial","category":"page"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Rational","page":"Discrete Math","title":"Rational","text":"","category":"section"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/","page":"Discrete Math","title":"Discrete Math","text":"Rational\nrationalize\nnumerator\ndenominator","category":"page"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#index","page":"Discrete Math","title":"index","text":"","category":"section"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/","page":"Discrete Math","title":"Discrete Math","text":"Base.factorial\nBase.gcd\nBase.gcdx\nBase.lcm\nBase.binomial\n\nBase.Rational\nBase.rationalize\nBase.numerator\nBase.denominator","category":"page"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.factorial","page":"Discrete Math","title":"Base.factorial","text":"factorial(n::Integer)\n\nFactorial of n. If n is an Integer, the factorial is computed as an integer (promoted to at least 64 bits). Note that this may overflow if n is not small, but you can use factorial(big(n)) to compute the result exactly in arbitrary precision.\n\nSee also binomial.\n\nExamples\n\njulia> factorial(6)\n720\n\njulia> factorial(21)\nERROR: OverflowError: 21 is too large to look up in the table; consider using `factorial(big(21))` instead\nStacktrace:\n[...]\n\njulia> factorial(big(21))\n51090942171709440000\n\nExternal links\n\nFactorial on Wikipedia.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.gcd","page":"Discrete Math","title":"Base.gcd","text":"gcd(x, y...)\n\nGreatest common (positive) divisor (or zero if all arguments are zero). The arguments may be integer and rational numbers.\n\ncompat: Julia 1.4\nRational arguments require Julia 1.4 or later.\n\nExamples\n\njulia> gcd(6, 9)\n3\n\njulia> gcd(6, -9)\n3\n\njulia> gcd(6, 0)\n6\n\njulia> gcd(0, 0)\n0\n\njulia> gcd(1//3, 2//3)\n1//3\n\njulia> gcd(1//3, -2//3)\n1//3\n\njulia> gcd(1//3, 2)\n1//3\n\njulia> gcd(0, 0, 10, 15)\n5\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.gcdx","page":"Discrete Math","title":"Base.gcdx","text":"gcdx(a, b)\n\nComputes the greatest common (positive) divisor of a and b and their Bézout coefficients, i.e. the integer coefficients u and v that satisfy ua+vb = d = gcd(a b). gcdx(a b) returns (d u v).\n\nThe arguments may be integer and rational numbers.\n\ncompat: Julia 1.4\nRational arguments require Julia 1.4 or later.\n\nExamples\n\njulia> gcdx(12, 42)\n(6, -3, 1)\n\njulia> gcdx(240, 46)\n(2, -9, 47)\n\nnote: Note\nBézout coefficients are not uniquely defined. gcdx returns the minimal Bézout coefficients that are computed by the extended Euclidean algorithm. (Ref: D. Knuth, TAoCP, 2/e, p. 325, Algorithm X.) For signed integers, these coefficients u and v are minimal in the sense that u  bd and v  ad. Furthermore, the signs of u and v are chosen so that d is positive. For unsigned integers, the coefficients u and v might be near their typemax, and the identity then holds only via the unsigned integers' modulo arithmetic.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.lcm","page":"Discrete Math","title":"Base.lcm","text":"lcm(x, y...)\n\nLeast common (positive) multiple (or zero if any argument is zero). The arguments may be integer and rational numbers.\n\ncompat: Julia 1.4\nRational arguments require Julia 1.4 or later.\n\nExamples\n\njulia> lcm(2, 3)\n6\n\njulia> lcm(-2, 3)\n6\n\njulia> lcm(0, 3)\n0\n\njulia> lcm(0, 0)\n0\n\njulia> lcm(1//3, 2//3)\n2//3\n\njulia> lcm(1//3, -2//3)\n2//3\n\njulia> lcm(1//3, 2)\n2//1\n\njulia> lcm(1, 3, 5, 7)\n105\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.binomial","page":"Discrete Math","title":"Base.binomial","text":"binomial(n::Integer, k::Integer)\n\nThe binomial coefficient binomnk, being the coefficient of the kth term in the polynomial expansion of (1+x)^n.\n\nIf n is non-negative, then it is the number of ways to choose k out of n items:\n\nbinomnk = fracnk (n-k)\n\nwhere n is the factorial function.\n\nIf n is negative, then it is defined in terms of the identity\n\nbinomnk = (-1)^k binomk-n-1k\n\nSee also factorial.\n\nExamples\n\njulia> binomial(5, 3)\n10\n\njulia> factorial(5) ÷ (factorial(5-3) * factorial(3))\n10\n\njulia> binomial(-5, 3)\n-35\n\nExternal links\n\nBinomial coefficient on Wikipedia.\n\n\n\n\n\nbinomial(x::Number, k::Integer)\n\nThe generalized binomial coefficient, defined for k ≥ 0 by the polynomial\n\nfrac1k prod_j=0^k-1 (x - j)\n\nWhen k < 0 it returns zero.\n\nFor the case of integer x, this is equivalent to the ordinary integer binomial coefficient\n\nbinomnk = fracnk (n-k)\n\nFurther generalizations to non-integer k are mathematically possible, but involve the Gamma function and/or the beta function, which are not provided by the Julia standard library but are available in external packages such as SpecialFunctions.jl.\n\nExternal links\n\nBinomial coefficient on Wikipedia.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.Rational","page":"Discrete Math","title":"Base.Rational","text":"Rational{T<:Integer} <: Real\n\nRational number type, with numerator and denominator of type T. Rationals are checked for overflow.\n\n\n\n\n\n","category":"type"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.rationalize","page":"Discrete Math","title":"Base.rationalize","text":"rationalize([T<:Integer=Int,] x; tol::Real=eps(x))\n\nApproximate floating point number x as a Rational number with components of the given integer type. The result will differ from x by no more than tol.\n\nExamples\n\njulia> rationalize(5.6)\n28//5\n\njulia> a = rationalize(BigInt, 10.3)\n103//10\n\njulia> typeof(numerator(a))\nBigInt\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.numerator","page":"Discrete Math","title":"Base.numerator","text":"numerator(x)\n\nNumerator of the rational representation of x.\n\nExamples\n\njulia> numerator(2//3)\n2\n\njulia> numerator(4)\n4\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/DiscreteMath/DiscreteMath/#Base.denominator","page":"Discrete Math","title":"Base.denominator","text":"denominator(x)\n\nDenominator of the rational representation of x.\n\nExamples\n\njulia> denominator(2//3)\n3\n\njulia> denominator(4)\n1\n\n\n\n\n\n","category":"function"},{"location":"Packages/Graph-and-Network/#Graph-and-Network-Pkg","page":"Graph and Network Pkg","title":"Graph and Network Pkg","text":"","category":"section"},{"location":"Packages/Graph-and-Network/#Graph","page":"Graph and Network Pkg","title":"Graph","text":"","category":"section"},{"location":"Packages/Graph-and-Network/","page":"Graph and Network Pkg","title":"Graph and Network Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Graph-and-Network/","page":"Graph and Network Pkg","title":"Graph and Network Pkg","text":"🔗graph - JuliaHub\n🔗graph NOT plot - Github","category":"page"},{"location":"Packages/Graph-and-Network/#Network","page":"Graph and Network Pkg","title":"Network","text":"","category":"section"},{"location":"Packages/Graph-and-Network/","page":"Graph and Network Pkg","title":"Graph and Network Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Graph-and-Network/","page":"Graph and Network Pkg","title":"Graph and Network Pkg","text":"🔗network - JuliaHub\n🔗network - Github","category":"page"},{"location":"Packages/Integration-and-Differential/#Numerical-Integration-and-Differential-Equations-Pkg","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration and Differential Equations Pkg","text":"","category":"section"},{"location":"Packages/Integration-and-Differential/#Numerical-Integration","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration","text":"","category":"section"},{"location":"Packages/Integration-and-Differential/","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration and Differential Equations Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Integration-and-Differential/","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration and Differential Equations Pkg","text":"🔗#numerical-integration - JuliaHub\n🔗numerical integration - Github","category":"page"},{"location":"Packages/Integration-and-Differential/#Differential-Equations","page":"Numerical Integration and Differential Equations Pkg","title":"Differential Equations","text":"","category":"section"},{"location":"Packages/Integration-and-Differential/","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration and Differential Equations Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Integration-and-Differential/","page":"Numerical Integration and Differential Equations Pkg","title":"Numerical Integration and Differential Equations Pkg","text":"🔗#differential-equations - JuliaHub\n🔗differential equations - Github","category":"page"},{"location":"ElementaryMath/Polynomials/Polynomials/#Polynomials","page":"Polynomials","title":"Polynomials","text":"","category":"section"},{"location":"ElementaryMath/Polynomials/Polynomials/","page":"Polynomials","title":"Polynomials","text":"evalpoly\n@evalpoly","category":"page"},{"location":"ElementaryMath/Polynomials/Polynomials/#index","page":"Polynomials","title":"index","text":"","category":"section"},{"location":"ElementaryMath/Polynomials/Polynomials/","page":"Polynomials","title":"Polynomials","text":"Base.Math.evalpoly\nBase.Math.@evalpoly","category":"page"},{"location":"ElementaryMath/Polynomials/Polynomials/#Base.Math.evalpoly","page":"Polynomials","title":"Base.Math.evalpoly","text":"evalpoly(x, p)\n\nEvaluate the polynomial sum_k x^k-1 pk for the coefficients p[1], p[2], ...; that is, the coefficients are given in ascending order by power of x. Loops are unrolled at compile time if the number of coefficients is statically known, i.e. when p is a Tuple. This function generates efficient code using Horner's method if x is real, or using a Goertzel-like [DK62] algorithm if x is complex.\n\n[DK62]: Donald Knuth, Art of Computer Programming, Volume 2: Seminumerical Algorithms, Sec. 4.6.4.\n\ncompat: Julia 1.4\nThis function requires Julia 1.4 or later.\n\nExamples\n\njulia> evalpoly(2, (1, 2, 3))\n17\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Polynomials/Polynomials/#Base.Math.@evalpoly","page":"Polynomials","title":"Base.Math.@evalpoly","text":"@evalpoly(z, c...)\n\nEvaluate the polynomial sum_k z^k-1 ck for the coefficients c[1], c[2], ...; that is, the coefficients are given in ascending order by power of z.  This macro expands to efficient inline code that uses either Horner's method or, for complex z, a more efficient Goertzel-like algorithm.\n\nSee also evalpoly.\n\nExamples\n\njulia> @evalpoly(3, 1, 0, 1)\n10\n\njulia> @evalpoly(2, 1, 0, 1)\n5\n\njulia> @evalpoly(2, 1, 1, 1)\n7\n\n\n\n\n\n","category":"macro"},{"location":"ElementaryMath/Trigonometry/Secant/#Secant","page":"Secant","title":"Secant","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Secant/","page":"Secant","title":"Secant","text":"Base.sec\nBase.secd\nBase.sech\nBase.asec\nBase.asecd\nBase.asech","category":"page"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.sec","page":"Secant","title":"Base.Math.sec","text":"sec(x)\n\nCompute the secant of x, where x is in radians.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.secd","page":"Secant","title":"Base.Math.secd","text":"secd(x)\n\nCompute the secant of x, where x is in degrees.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.sech","page":"Secant","title":"Base.Math.sech","text":"sech(x)\n\nCompute the hyperbolic secant of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.asec","page":"Secant","title":"Base.Math.asec","text":"asec(x)\n\nCompute the inverse secant of x, where the output is in radians. \n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.asecd","page":"Secant","title":"Base.Math.asecd","text":"asecd(x)\n\nCompute the inverse secant of x, where the output is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Secant/#Base.Math.asech","page":"Secant","title":"Base.Math.asech","text":"asech(x)\n\nCompute the inverse hyperbolic secant of x. \n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Constants","page":"Constants","title":"Constants","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"missing\nismissing\nnothing\nisnothing\nundef\nUndefInitializer","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Math-Constants","page":"Constants","title":"Math Constants","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"pi\nπ\nℯ","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Float-Point","page":"Constants","title":"Float Point","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"eps","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Infinity","page":"Constants","title":"Infinity","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"Inf16\nInf32\nInf64\nisinf\nisfinite","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Not-a-Number","page":"Constants","title":"Not a Number","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"NaN\nNaN16\nNaN32\nNaN64\nisnan","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Complex-Number","page":"Constants","title":"Complex Number","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"im","category":"page"},{"location":"ElementaryMath/Constants/Constants/#temp-docs","page":"Constants","title":"temp docs","text":"","category":"section"},{"location":"ElementaryMath/Constants/Constants/","page":"Constants","title":"Constants","text":"Base.missing\nBase.ismissing\nBase.nothing\nBase.isnothing\nBase.undef\nBase.UndefInitializer\n\nBase.pi\nBase.π\nBase.ℯ\n\nBase.eps\nBase.Inf\nBase.Inf16\nBase.Inf32\nBase.Inf64\nBase.isinf\nBase.isfinite\n\nBase.NaN\nBase.NaN16\nBase.NaN32\nBase.NaN64\nBase.isnan","category":"page"},{"location":"ElementaryMath/Constants/Constants/#Base.missing","page":"Constants","title":"Base.missing","text":"missing\n\nThe singleton instance of type Missing representing a missing value.\n\nSee also: NaN, skipmissing, nonmissingtype.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.ismissing","page":"Constants","title":"Base.ismissing","text":"ismissing(x)\n\nIndicate whether x is missing.\n\nSee also: skipmissing, isnothing, isnan.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Core.nothing","page":"Constants","title":"Core.nothing","text":"nothing\n\nThe singleton instance of type Nothing, used by convention when there is no value to return (as in a C void function) or when a variable or field holds no value.\n\nSee also: isnothing, something, missing.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.isnothing","page":"Constants","title":"Base.isnothing","text":"isnothing(x)\n\nReturn true if x === nothing, and return false if not.\n\ncompat: Julia 1.1\nThis function requires at least Julia 1.1.\n\nSee also something, Base.notnothing, ismissing.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Core.undef","page":"Constants","title":"Core.undef","text":"undef\n\nAlias for UndefInitializer(), which constructs an instance of the singleton type UndefInitializer, used in array initialization to indicate the array-constructor-caller would like an uninitialized array.\n\nSee also: missing, similar.\n\nExamples\n\njulia> Array{Float64, 1}(undef, 3)\n3-element Vector{Float64}:\n 2.2752528595e-314\n 2.202942107e-314\n 2.275252907e-314\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Core.UndefInitializer","page":"Constants","title":"Core.UndefInitializer","text":"UndefInitializer\n\nSingleton type used in array initialization, indicating the array-constructor-caller would like an uninitialized array. See also undef, an alias for UndefInitializer().\n\nExamples\n\njulia> Array{Float64, 1}(UndefInitializer(), 3)\n3-element Array{Float64, 1}:\n 2.2752528595e-314\n 2.202942107e-314\n 2.275252907e-314\n\n\n\n\n\n","category":"type"},{"location":"ElementaryMath/Constants/Constants/#Base.MathConstants.pi","page":"Constants","title":"Base.MathConstants.pi","text":"π\npi\n\nThe constant pi.\n\nUnicode π can be typed by writing \\pi then pressing tab in the Julia REPL, and in many editors.\n\nSee also: sinpi, sincospi, deg2rad.\n\nExamples\n\njulia> pi\nπ = 3.1415926535897...\n\njulia> 1/2pi\n0.15915494309189535\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.MathConstants.π","page":"Constants","title":"Base.MathConstants.π","text":"π\npi\n\nThe constant pi.\n\nUnicode π can be typed by writing \\pi then pressing tab in the Julia REPL, and in many editors.\n\nSee also: sinpi, sincospi, deg2rad.\n\nExamples\n\njulia> pi\nπ = 3.1415926535897...\n\njulia> 1/2pi\n0.15915494309189535\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.MathConstants.ℯ","page":"Constants","title":"Base.MathConstants.ℯ","text":"ℯ\ne\n\nThe constant ℯ.\n\nUnicode ℯ can be typed by writing \\euler and pressing tab in the Julia REPL, and in many editors.\n\nSee also: exp, cis, cispi.\n\nExamples\n\njulia> ℯ\nℯ = 2.7182818284590...\n\njulia> log(ℯ)\n1\n\njulia> ℯ^(im)π ≈ -1\ntrue\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.eps","page":"Constants","title":"Base.eps","text":"eps(::Type{T}) where T<:AbstractFloat\neps()\n\nReturn the machine epsilon of the floating point type T (T = Float64 by default). This is defined as the gap between 1 and the next largest value representable by typeof(one(T)), and is equivalent to eps(one(T)).  (Since eps(T) is a bound on the relative error of T, it is a \"dimensionless\" quantity like one.)\n\nExamples\n\njulia> eps()\n2.220446049250313e-16\n\njulia> eps(Float32)\n1.1920929f-7\n\njulia> 1.0 + eps()\n1.0000000000000002\n\njulia> 1.0 + eps()/2\n1.0\n\n\n\n\n\neps(x::AbstractFloat)\n\nReturn the unit in last place (ulp) of x. This is the distance between consecutive representable floating point values at x. In most cases, if the distance on either side of x is different, then the larger of the two is taken, that is\n\neps(x) == max(x-prevfloat(x), nextfloat(x)-x)\n\nThe exceptions to this rule are the smallest and largest finite values (e.g. nextfloat(-Inf) and prevfloat(Inf) for Float64), which round to the smaller of the values.\n\nThe rationale for this behavior is that eps bounds the floating point rounding error. Under the default RoundNearest rounding mode, if y is a real number and x is the nearest floating point number to y, then\n\ny-x leq operatornameeps(x)2\n\nSee also: nextfloat, issubnormal, floatmax.\n\nExamples\n\njulia> eps(1.0)\n2.220446049250313e-16\n\njulia> eps(prevfloat(2.0))\n2.220446049250313e-16\n\njulia> eps(2.0)\n4.440892098500626e-16\n\njulia> x = prevfloat(Inf)      # largest finite Float64\n1.7976931348623157e308\n\njulia> x + eps(x)/2            # rounds up\nInf\n\njulia> x + prevfloat(eps(x)/2) # rounds down\n1.7976931348623157e308\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Base.Inf","page":"Constants","title":"Base.Inf","text":"Inf, Inf64\n\nPositive infinity of type Float64.\n\nSee also: isfinite, typemax, NaN, Inf32.\n\nExamples\n\njulia> π/0\nInf\n\njulia> +1.0 / -0.0\n-Inf\n\njulia> ℯ^-Inf\n0.0\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.Inf16","page":"Constants","title":"Base.Inf16","text":"Inf16\n\nPositive infinity of type Float16.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.Inf32","page":"Constants","title":"Base.Inf32","text":"Inf32\n\nPositive infinity of type Float32.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.Inf64","page":"Constants","title":"Base.Inf64","text":"Inf, Inf64\n\nPositive infinity of type Float64.\n\nSee also: isfinite, typemax, NaN, Inf32.\n\nExamples\n\njulia> π/0\nInf\n\njulia> +1.0 / -0.0\n-Inf\n\njulia> ℯ^-Inf\n0.0\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.isinf","page":"Constants","title":"Base.isinf","text":"isinf(f) -> Bool\n\nTest whether a number is infinite.\n\nSee also: Inf, iszero, isfinite, isnan.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Base.isfinite","page":"Constants","title":"Base.isfinite","text":"isfinite(f) -> Bool\n\nTest whether a number is finite.\n\nExamples\n\njulia> isfinite(5)\ntrue\n\njulia> isfinite(NaN32)\nfalse\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Constants/Constants/#Base.NaN","page":"Constants","title":"Base.NaN","text":"NaN, NaN64\n\nA not-a-number value of type Float64.\n\nSee also: isnan, missing, NaN32, Inf.\n\nExamples\n\njulia> 0/0\nNaN\n\njulia> Inf - Inf\nNaN\n\njulia> NaN == NaN, isequal(NaN, NaN), isnan(NaN)\n(false, true, true)\n\nnote: Note\nAlways use isnan or isequal for checking for NaN. Using x === NaN may give unexpected results:julia> reinterpret(UInt32, NaN32)\n0x7fc00000\n\njulia> NaN32p1 = reinterpret(Float32, 0x7fc00001)\nNaN32\n\njulia> NaN32p1 === NaN32, isequal(NaN32p1, NaN32), isnan(NaN32p1)\n(false, true, true)\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.NaN16","page":"Constants","title":"Base.NaN16","text":"NaN16\n\nA not-a-number value of type Float16.\n\nSee also: NaN.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.NaN32","page":"Constants","title":"Base.NaN32","text":"NaN32\n\nA not-a-number value of type Float32.\n\nSee also: NaN.\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.NaN64","page":"Constants","title":"Base.NaN64","text":"NaN, NaN64\n\nA not-a-number value of type Float64.\n\nSee also: isnan, missing, NaN32, Inf.\n\nExamples\n\njulia> 0/0\nNaN\n\njulia> Inf - Inf\nNaN\n\njulia> NaN == NaN, isequal(NaN, NaN), isnan(NaN)\n(false, true, true)\n\nnote: Note\nAlways use isnan or isequal for checking for NaN. Using x === NaN may give unexpected results:julia> reinterpret(UInt32, NaN32)\n0x7fc00000\n\njulia> NaN32p1 = reinterpret(Float32, 0x7fc00001)\nNaN32\n\njulia> NaN32p1 === NaN32, isequal(NaN32p1, NaN32), isnan(NaN32p1)\n(false, true, true)\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Constants/Constants/#Base.isnan","page":"Constants","title":"Base.isnan","text":"isnan(f) -> Bool\n\nTest whether a number value is a NaN, an indeterminate value which is neither an infinity nor a finite number (\"not a number\").\n\nSee also: iszero, isone, isinf, ismissing.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/sinh/#sinh","page":"sinh","title":"sinh","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sinh/","page":"sinh","title":"sinh","text":"Base.sinh","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sinh/#Base.sinh","page":"sinh","title":"Base.sinh","text":"sinh(x)\n\nCompute hyperbolic sine of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/SpecialFunctions/#Special-Functions","page":"Special Functions","title":"Special Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/","page":"Special Functions","title":"Special Functions","text":"tip: SpecialFunctions.jl\n🔗JuliaMath/SpecialFunctions.jl – Special mathematical functions in JuliaSpecial mathematical functions in Julia, include Bessel, Hankel, Airy, error, Dawson, exponential (or sine and cosine) integrals, eta, zeta, digamma, inverse digamma, trigamma, and polygamma functions. Most of these functions were formerly part of Base in early versions of Julia.","category":"page"},{"location":"ElementaryMath/SpecialFunctions/","page":"Special Functions","title":"Special Functions","text":"See Also: Special Functions Pkg","category":"page"},{"location":"ElementaryMath/SpecialFunctions/#External-Links","page":"Special Functions","title":"External Links","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/","page":"Special Functions","title":"Special Functions","text":"🔗Special functions - Wikipedia\n🔗NIST Digital Library of Mathematical Functions - DLMF\n🔗Special Functions Wiki","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/sincos/#sincos","page":"sincos","title":"sincos","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/SinCos/sincos/","page":"sincos","title":"sincos","text":"Base.sincos","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/sincos/#Base.Math.sincos","page":"sincos","title":"Base.Math.sincos","text":"sincos(x)\n\nSimultaneously compute the sine and cosine of x, where x is in radians, returning a tuple (sine, cosine).\n\nSee also cis, sincospi, sincosd.\n\n\n\n\n\n","category":"function"},{"location":"Packages/Plotting/#Plotting-Pkg","page":"Plotting Pkg","title":"Plotting Pkg","text":"","category":"section"},{"location":"Packages/Plotting/","page":"Plotting Pkg","title":"Plotting Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Plotting/","page":"Plotting Pkg","title":"Plotting Pkg","text":"🔗#plots - JuliaHub\n🔗plotting - JuliaHub\n🔗plotting - Github","category":"page"},{"location":"ElementaryMath/Arithmetic/Powers/#Powers","page":"Powers","title":"Powers","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Powers/","page":"Powers","title":"Powers","text":"Base.:^(::Number, ::Number)","category":"page"},{"location":"ElementaryMath/Arithmetic/Powers/#Base.:^-Tuple{Number, Number}","page":"Powers","title":"Base.:^","text":"^(x, y)\n\nExponentiation operator.\n\nIf x and y are integers, the result may overflow. To enter numbers in scientific notation, use Float64 literals such as 1.2e3 rather than 1.2 * 10^3.\n\nIf y is an Int literal (e.g. 2 in x^2 or -3 in x^-3), the Julia code x^y is transformed by the compiler to Base.literal_pow(^, x, Val(y)), to enable compile-time specialization on the value of the exponent. (As a default fallback we have Base.literal_pow(^, x, Val(y)) = ^(x,y), where usually ^ == Base.^ unless ^ has been defined in the calling namespace.) If y is a negative integer literal, then Base.literal_pow transforms the operation to inv(x)^-y by default, where -y is positive.\n\nSee also exp2, <<.\n\nExamples\n\njulia> 3^5\n243\n\njulia> 3^-1  # uses Base.literal_pow\n0.3333333333333333\n\njulia> p = -1;\n\njulia> 3^p\nERROR: DomainError with -1:\nCannot raise an integer x to a negative power -1.\n[...]\n\njulia> 3.0^p\n0.3333333333333333\n\njulia> 10^19 > 0  # integer overflow\nfalse\n\njulia> big(10)^19 == 1e19\ntrue\n\n\n\n\n\n","category":"method"},{"location":"ElementaryMath/Trigonometry/Sine/sinpi/#sinpi","page":"sinpi","title":"sinpi","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sinpi/","page":"sinpi","title":"sinpi","text":"Base.sinpi","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sinpi/#Base.Math.sinpi","page":"sinpi","title":"Base.Math.sinpi","text":"sinpi(x)\n\nCompute sin(pi x) more accurately than sin(pi*x), especially for large x.\n\nSee also sind, cospi, sincospi.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Exponents/#Exponents","page":"Exponents","title":"Exponents","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/Exponents/","page":"Exponents","title":"Exponents","text":"Base.exp\nBase.expm1\nBase.exp2\nBase.exp10","category":"page"},{"location":"ElementaryMath/Exp-and-Log/Exponents/#Base.exp","page":"Exponents","title":"Base.exp","text":"exp(x)\n\nCompute the natural base exponential of x, in other words ℯ^x.\n\nSee also exp2, exp10 and cis.\n\nExamples\n\njulia> exp(1.0)\n2.718281828459045\n\njulia> exp(im * pi) ≈ cis(pi)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Exponents/#Base.expm1","page":"Exponents","title":"Base.expm1","text":"expm1(x)\n\nAccurately compute e^x-1. It avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small values of x.\n\nExamples\n\njulia> expm1(1e-16)\n1.0e-16\n\njulia> exp(1e-16) - 1\n0.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Exponents/#Base.exp2","page":"Exponents","title":"Base.exp2","text":"exp2(x)\n\nCompute the base 2 exponential of x, in other words 2^x.\n\nSee also ldexp, <<.\n\nExamples\n\njulia> exp2(5)\n32.0\n\njulia> 2^5\n32\n\njulia> exp2(63) > typemax(Int)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Exponents/#Base.exp10","page":"Exponents","title":"Base.exp10","text":"exp10(x)\n\nCompute the base 10 exponential of x, in other words 10^x.\n\nExamples\n\njulia> exp10(2)\n100.0\n\njulia> 10^2\n100\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Cosine","page":"Cosine","title":"Cosine","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Cosine/","page":"Cosine","title":"Cosine","text":"Base.cos\nBase.cosd\nBase.cospi\nBase.cosh\nBase.acos\nBase.acosd\nBase.acosh\n\nBase.cosc","category":"page"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.cos","page":"Cosine","title":"Base.cos","text":"cos(x)\n\nCompute cosine of x, where x is in radians.\n\nSee also cosd, cospi, sincos, cis.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.Math.cosd","page":"Cosine","title":"Base.Math.cosd","text":"cosd(x)\n\nCompute cosine of x, where x is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.Math.cospi","page":"Cosine","title":"Base.Math.cospi","text":"cospi(x)\n\nCompute cos(pi x) more accurately than cos(pi*x), especially for large x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.cosh","page":"Cosine","title":"Base.cosh","text":"cosh(x)\n\nCompute hyperbolic cosine of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.acos","page":"Cosine","title":"Base.acos","text":"acos(x)\n\nCompute the inverse cosine of x, where the output is in radians\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.Math.acosd","page":"Cosine","title":"Base.Math.acosd","text":"acosd(x)\n\nCompute the inverse cosine of x, where the output is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.acosh","page":"Cosine","title":"Base.acosh","text":"acosh(x)\n\nCompute the inverse hyperbolic cosine of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosine/#Base.Math.cosc","page":"Cosine","title":"Base.Math.cosc","text":"cosc(x)\n\nCompute cos(pi x)  x - sin(pi x)  (pi x^2) if x neq 0, and 0 if x = 0. This is the derivative of sinc(x).\n\nSee also sinc.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/SinCos/cispi/#cispi","page":"cispi","title":"cispi","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/SinCos/cispi/","page":"cispi","title":"cispi","text":"Base.cispi","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/cispi/#Base.cispi","page":"cispi","title":"Base.cispi","text":"cispi(x)\n\nMore accurate method for cis(pi*x) (especially for large x).\n\nSee also cis, sincospi, exp, angle.\n\nExamples\n\njulia> cispi(10000)\n1.0 + 0.0im\n\njulia> cispi(0.25 + 1im)\n0.030556854645954562 + 0.03055685464595456im\n\ncompat: Julia 1.6\nThis function requires Julia 1.6 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Arithmetic-Operations","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Basic-Arithmetic","page":"Arithmetic Operations","title":"Basic Arithmetic","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Addition","page":"Arithmetic Operations","title":"Addition","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"+\nsum\nsum!\ncumsum\ncumsum!\nadd_sum","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Subtraction","page":"Arithmetic Operations","title":"Subtraction","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"-\ndiff","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Multiplication","page":"Arithmetic Operations","title":"Multiplication","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"*\nprod\ncumprod","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Division","page":"Arithmetic Operations","title":"Division","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"/\n\\","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Powers","page":"Arithmetic Operations","title":"Powers","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"^","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Transpose","page":"Arithmetic Operations","title":"Transpose","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"transpose","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Modulo-Division-and-Rounding","page":"Arithmetic Operations","title":"Modulo Division and Rounding","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"mod\nrem\nidivide\nceil\nfix\nfloor\nround","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Relational-Operations","page":"Arithmetic Operations","title":"Relational Operations","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"==\n>=\n>\n<=\n<\n~=\nisequal\nisequaln","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Logical-(Boolean)-Operations","page":"Arithmetic Operations","title":"Logical (Boolean) Operations","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Arithmetic/","page":"Arithmetic Operations","title":"Arithmetic Operations","text":"&\nShort-Circuit &&\n~\n|\nShort-Circuit ||\nxor\nall\nany\nfalse\nfind\nislogical\nlogical\ntrue","category":"page"},{"location":"ElementaryMath/Arithmetic/Arithmetic/#Bit-Wise-Operations","page":"Arithmetic Operations","title":"Bit-Wise Operations","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Trigonometry","page":"Trigonometry","title":"Trigonometry","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"NOTE: Need to have a function auto-generated:   function name + one sentence description","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Sine","page":"Trigonometry","title":"Sine","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"sin\nsind\nsinpi\nasin\nasind\nsinh\nasinh","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"sin like","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"sinc","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Sin-and-Cos","page":"Trigonometry","title":"Sin and Cos","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"sincos\nsincosd\nsincospi\ncis\ncispi","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Cosine","page":"Trigonometry","title":"Cosine","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"cos\ncosd\ncospi\nacos\nacosd\ncosh\nacosh","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"cos like","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"cosc","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Tangent","page":"Trigonometry","title":"Tangent","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"tan\ntand\ntanpi\natan\natand\natan2(y, x) => atand(y, x)\ntanh\natanh","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Cosecant","page":"Trigonometry","title":"Cosecant","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"csc\ncscd\nacsc\nacscd\ncsch\nacsch","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Secant","page":"Trigonometry","title":"Secant","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"sec\nsecd\nasec\nasecd\nsech\nasech","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Cotangent","page":"Trigonometry","title":"Cotangent","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"cot\ncotd\nacot\nacotd\ncoth\nacoth","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Hypotenuse","page":"Trigonometry","title":"Hypotenuse","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"hypot","category":"page"},{"location":"ElementaryMath/Trigonometry/Trigonometry/#Conversions","page":"Trigonometry","title":"Conversions","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Trigonometry/","page":"Trigonometry","title":"Trigonometry","text":"rad2deg\ndeg2rad","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/asinh/#asinh","page":"asinh","title":"asinh","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/asinh/","page":"asinh","title":"asinh","text":"Base.asinh","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/asinh/#Base.asinh","page":"asinh","title":"Base.asinh","text":"asinh(x)\n\nCompute the inverse hyperbolic sine of x.\n\n\n\n\n\n","category":"function"},{"location":"stdlib/RandomNumbers/#Random-Numbers","page":"Random Numbers","title":"Random Numbers","text":"","category":"section"},{"location":"stdlib/RandomNumbers/","page":"Random Numbers","title":"Random Numbers","text":"See Stdlib: Random","category":"page"},{"location":"cheatsheet/scipy/#SciPy-Julia","page":"SciPy","title":"SciPy => Julia","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"Github: scipy/scipy\nDocs: docs.scipy.org","category":"page"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"scipy.cluster\nscipy.constants\nscipy.datasets\nscipy.fft\nscipy.fftpack\nscipy.integrate\nscipy.interpolate\nscipy.io\nscipy.linalg\nscipy.misc\nscipy.ndimage\nscipy.odr\nscipy.optimize\nscipy.signal\nscipy.sparse\nscipy.spatial\nscipy.special\nscipy.stats","category":"page"},{"location":"cheatsheet/scipy/#Fortran-Code-in-SciPy","page":"SciPy","title":"Fortran Code in SciPy","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"META: FORTRAN Code inventory #18566","category":"page"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"[ ]  scipy.integrate:   Not in Julia Core\n[ ]  scipy.interpolate   Not in Julia Core\n[ ]  scipy.linalg\n[x]  lu.f: Replaced in #18358\n[x]   det.f: Replaced in #18225\n[ ]  id_dist: Convert: Moderate (replacement in progress) #18367\n[ ]  blas: Convert: Very Hard (Depends on BLAS/LAPACK lib) A lot of historical wrapper inconsistencies\n[ ]  lapack: Convert : Very Hard (Depends on BLAS/LAPACK lib) A lot of historical wrapper inconsistencies\n[ ]  scipy.odr   Not in Julia Core\n[ ]  scipy.optimize   Not in Julia Core\n[ ]  scipy.sparse.linalg\n[ ]  ARPACK Convert : Hard\n[x]  iterative: Replaced in #18488\n[ ]  PROPACK : Convert : Hard\n[ ]  scipy.special\n[x]  AMOS: Replaced in #19587\n[x]  cdflib: Replaced in  #19560\n[ ]  specfun: Replaced in #19824\n[x]  scipy.stats\n[x]  statlib: Replaced in #18679\n[ ]  mvndst: Already implemented in #17410 but not public yet","category":"page"},{"location":"cheatsheet/scipy/#scipy.special","page":"SciPy","title":"scipy.special","text":"","category":"section"},{"location":"cheatsheet/scipy/#Hypergeometric-functions","page":"SciPy","title":"Hypergeometric functions","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"Need: JuliaMath/HypergeometricFunctions.jl","category":"page"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"hyp0f1:   HypergeometricFunctions.pFq\nscipy.special.hyp1f1:   HypergeometricFunctions._₁F₁\nscipy.special.hyp2f1:   HypergeometricFunctions._₂F₁\nscipy.special.hyperu:   HypergeometricFunctions.U","category":"page"},{"location":"cheatsheet/scipy/#Parabolic-cylinder-functions","page":"SciPy","title":"Parabolic cylinder functions","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"Related issue: Add parabolic cylinder function - JuliaMath/SpecialFunctions.jl\n#TODO: [pr#19824] Rewrite specfun F77 code in C - scipy/scipy","category":"page"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"pbdv:   missing\npbvv:   missing\npbwa:   missing\npbdv_seq, pbvv_seq, pbdn_seq: missing","category":"page"},{"location":"cheatsheet/scipy/#Mathieu-and-related-functions","page":"SciPy","title":"Mathieu and related functions","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"May using: BBN-Q/MathieuFunctions.jl\n#TODO: [pr#19824] Rewrite specfun F77 code in C - scipy/scipy","category":"page"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"mathieu_a, mathieu_b: missing\nmathieu_cem, mathieu_sem: missing","category":"page"},{"location":"cheatsheet/scipy/#Kelvin-functions","page":"SciPy","title":"Kelvin functions","text":"","category":"section"},{"location":"cheatsheet/scipy/","page":"SciPy","title":"SciPy","text":"kelvin, kelvin_zeros: missing","category":"page"},{"location":"dev/#Dev-Memo","page":"Dev Memo","title":"Dev Memo","text":"","category":"section"},{"location":"dev/#Reference-docs","page":"Dev Memo","title":"Reference docs","text":"","category":"section"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"exception","category":"page"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"🔗Ruby's Exceptional Creatures","category":"page"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"sin","category":"page"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"🔗Matlab - sin\n🔗Wolfram - Sin\n🔗Python numpy - sin\n🔗DLMF - Trigonometric Functions\n🔗WikiPedia - Sine and Cosine\n🔗R - Trig","category":"page"},{"location":"dev/#matlab","page":"Dev Memo","title":"matlab","text":"","category":"section"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"One sentence description\nSyntax\nDescription\nExamples, with plot\nInput Arguments\nOutput Arguments\nMore About\nTips\nExtended Capabilities\nVersion History\nSee Also (links)","category":"page"},{"location":"dev/#wolfram","page":"Dev Memo","title":"wolfram","text":"","category":"section"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"Details, Some definitions and facts\nBackground & Context\nExamples\nBasic Examples: most common use cases\nScope: Survey of the scope of standard use cases\nApplications: Sample problems that can be solved with this function\nProperties & Relations: Properties of the function, and connections to other functions\nPossible Issues: Common pitfalls and unexpected behavior\nNeat Examples: Surprising or curious use cases\nSee Also (links)\nTech Notes (links)\nRelated Guides (links)\nRelated Links\nHistory","category":"page"},{"location":"dev/#numpy","page":"Dev Memo","title":"numpy","text":"","category":"section"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"func def\nParameters\nSee Also (links)\nNotes\nExamples, with plot","category":"page"},{"location":"dev/#R","page":"Dev Memo","title":"R","text":"","category":"section"},{"location":"dev/","page":"Dev Memo","title":"Dev Memo","text":"Description\nUsage\nArguments\nValue, special value\nComplex values, branch cuts\nDetails, impl details\nReferences\nExamples","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/sincospi/#sincospi","page":"sincospi","title":"sincospi","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/SinCos/sincospi/","page":"sincospi","title":"sincospi","text":"Base.sincospi","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/sincospi/#Base.Math.sincospi","page":"sincospi","title":"Base.Math.sincospi","text":"sincospi(x)\n\nSimultaneously compute sinpi(x) and cospi(x) (the sine and cosine of π*x, where x is in radians), returning a tuple (sine, cosine).\n\ncompat: Julia 1.6\nThis function requires Julia 1.6 or later.\n\nSee also: cispi, sincosd, sinpi.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/sind/#sind","page":"sind","title":"sind","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sind/","page":"sind","title":"sind","text":"Base.sind","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sind/#Base.Math.sind","page":"sind","title":"Base.Math.sind","text":"sind(x)\n\nCompute sine of x, where x is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Subtraction/Subtraction/#Subtraction","page":"Subtraction","title":"Subtraction","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Subtraction/Subtraction/","page":"Subtraction","title":"Subtraction","text":"Base.:-(::Any)\nBase.:-(::Any, ::Any)\nBase.diff","category":"page"},{"location":"ElementaryMath/Arithmetic/Subtraction/Subtraction/#Base.:--Tuple{Any}","page":"Subtraction","title":"Base.:-","text":"-(x)\n\nUnary minus operator.\n\nSee also: abs, flipsign.\n\nExamples\n\njulia> -1\n-1\n\njulia> -(2)\n-2\n\njulia> -[1 2; 3 4]\n2×2 Matrix{Int64}:\n -1  -2\n -3  -4\n\njulia> -(true)  # promotes to Int\n-1\n\njulia> -(0x003)\n0xfffd\n\n\n\n\n\n","category":"method"},{"location":"ElementaryMath/Arithmetic/Subtraction/Subtraction/#Base.:--Tuple{Any, Any}","page":"Subtraction","title":"Base.:-","text":"-(x, y)\n\nSubtraction operator.\n\nExamples\n\njulia> 2 - 3\n-1\n\njulia> -(2, 4.5)\n-2.5\n\n\n\n\n\n","category":"method"},{"location":"ElementaryMath/Arithmetic/Subtraction/Subtraction/#Base.diff","page":"Subtraction","title":"Base.diff","text":"diff(A::AbstractVector)\ndiff(A::AbstractArray; dims::Integer)\n\nFinite difference operator on a vector or a multidimensional array A. In the latter case the dimension to operate on needs to be specified with the dims keyword argument.\n\ncompat: Julia 1.1\ndiff for arrays with dimension higher than 2 requires at least Julia 1.1.\n\nExamples\n\njulia> a = [2 4; 6 16]\n2×2 Matrix{Int64}:\n 2   4\n 6  16\n\njulia> diff(a, dims=2)\n2×1 Matrix{Int64}:\n  2\n 10\n\njulia> diff(vec(a))\n3-element Vector{Int64}:\n  4\n -2\n 12\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Checked-Math","page":"Checked Math","title":"Checked Math","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Checked/","page":"Checked Math","title":"Checked Math","text":"Base.Checked\nBase.Checked.checked_abs\nBase.Checked.checked_neg\nBase.Checked.checked_add\nBase.Checked.checked_sub\nBase.Checked.checked_mul\nBase.Checked.checked_div\nBase.Checked.checked_rem\nBase.Checked.checked_fld\nBase.Checked.checked_mod\nBase.Checked.checked_cld","category":"page"},{"location":"ElementaryMath/Arithmetic/Checked/#With-Overflow","page":"Checked Math","title":"With Overflow","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Checked/","page":"Checked Math","title":"Checked Math","text":"Base.Checked.add_with_overflow\nBase.Checked.sub_with_overflow\nBase.Checked.mul_with_overflow","category":"page"},{"location":"ElementaryMath/Arithmetic/Checked/#index","page":"Checked Math","title":"index","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Checked/","page":"Checked Math","title":"Checked Math","text":"Base.Checked\nBase.Checked.checked_abs\nBase.Checked.checked_neg\nBase.Checked.checked_add\nBase.Checked.checked_sub\nBase.Checked.checked_mul\nBase.Checked.checked_div\nBase.Checked.checked_rem\nBase.Checked.checked_fld\nBase.Checked.checked_mod\nBase.Checked.checked_cld\nBase.Checked.add_with_overflow\nBase.Checked.sub_with_overflow\nBase.Checked.mul_with_overflow","category":"page"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked","page":"Checked Math","title":"Base.Checked","text":"Checked\n\nThe Checked module provides arithmetic functions for the built-in signed and unsigned Integer types which throw an error when an overflow occurs. They are named like checked_sub, checked_div, etc. In addition, add_with_overflow, sub_with_overflow, mul_with_overflow return both the unchecked results and a boolean value denoting the presence of an overflow.\n\n\n\n\n\n","category":"module"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_abs","page":"Checked Math","title":"Base.Checked.checked_abs","text":"Base.checked_abs(x)\n\nCalculates abs(x), checking for overflow errors where applicable. For example, standard two's complement signed integers (e.g. Int) cannot represent abs(typemin(Int)), thus leading to an overflow.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_neg","page":"Checked Math","title":"Base.Checked.checked_neg","text":"Base.checked_neg(x)\n\nCalculates -x, checking for overflow errors where applicable. For example, standard two's complement signed integers (e.g. Int) cannot represent -typemin(Int), thus leading to an overflow.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_add","page":"Checked Math","title":"Base.Checked.checked_add","text":"Base.checked_add(x, y)\n\nCalculates x+y, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_sub","page":"Checked Math","title":"Base.Checked.checked_sub","text":"Base.checked_sub(x, y)\n\nCalculates x-y, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_mul","page":"Checked Math","title":"Base.Checked.checked_mul","text":"Base.checked_mul(x, y)\n\nCalculates x*y, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_div","page":"Checked Math","title":"Base.Checked.checked_div","text":"Base.checked_div(x, y)\n\nCalculates div(x,y), checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_rem","page":"Checked Math","title":"Base.Checked.checked_rem","text":"Base.checked_rem(x, y)\n\nCalculates x%y, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_fld","page":"Checked Math","title":"Base.Checked.checked_fld","text":"Base.checked_fld(x, y)\n\nCalculates fld(x,y), checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_mod","page":"Checked Math","title":"Base.Checked.checked_mod","text":"Base.checked_mod(x, y)\n\nCalculates mod(x,y), checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.checked_cld","page":"Checked Math","title":"Base.Checked.checked_cld","text":"Base.checked_cld(x, y)\n\nCalculates cld(x,y), checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.add_with_overflow","page":"Checked Math","title":"Base.Checked.add_with_overflow","text":"Base.add_with_overflow(x, y) -> (r, f)\n\nCalculates r = x+y, with the flag f indicating whether overflow has occurred.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.sub_with_overflow","page":"Checked Math","title":"Base.Checked.sub_with_overflow","text":"Base.sub_with_overflow(x, y) -> (r, f)\n\nCalculates r = x-y, with the flag f indicating whether overflow has occurred.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Checked/#Base.Checked.mul_with_overflow","page":"Checked Math","title":"Base.Checked.mul_with_overflow","text":"Base.mul_with_overflow(x, y) -> (r, f)\n\nCalculates r = x*y, with the flag f indicating whether overflow has occurred.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Root/#Root","page":"Root","title":"Root","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/Root/","page":"Root","title":"Root","text":"Base.sqrt\nBase.isqrt\nBase.cbrt","category":"page"},{"location":"ElementaryMath/Exp-and-Log/Root/#Base.sqrt","page":"Root","title":"Base.sqrt","text":"sqrt(x)\n\nReturn sqrtx.\n\nThrows DomainError for negative Real arguments. Use complex negative arguments instead. Note that sqrt has a branch cut along the negative real axis.\n\nThe prefix operator √ is equivalent to sqrt.\n\nSee also: hypot.\n\nExamples\n\njulia> sqrt(big(81))\n9.0\n\njulia> sqrt(big(-81))\nERROR: DomainError with -81.0:\nNaN result for non-NaN input.\nStacktrace:\n [1] sqrt(::BigFloat) at ./mpfr.jl:501\n[...]\n\njulia> sqrt(big(complex(-81)))\n0.0 + 9.0im\n\njulia> sqrt(-81 - 0.0im)  # -0.0im is below the branch cut\n0.0 - 9.0im\n\njulia> .√(1:4)\n4-element Vector{Float64}:\n 1.0\n 1.4142135623730951\n 1.7320508075688772\n 2.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Root/#Base.isqrt","page":"Root","title":"Base.isqrt","text":"isqrt(n::Integer)\n\nInteger square root: the largest integer m such that m*m <= n.\n\njulia> isqrt(5)\n2\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Root/#Base.Math.cbrt","page":"Root","title":"Base.Math.cbrt","text":"cbrt(x::Real)\n\nReturn the cube root of x, i.e. x^13. Negative values are accepted (returning the negative real root when x  0).\n\nThe prefix operator ∛ is equivalent to cbrt.\n\nExamples\n\njulia> cbrt(big(27))\n3.0\n\njulia> cbrt(big(-27))\n-3.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Tangent","page":"Tangent","title":"Tangent","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Tangent/","page":"Tangent","title":"Tangent","text":"Base.tan\nBase.tand\nBase.tanpi\nBase.tanh\nBase.atan\nBase.atand\nBase.atanh","category":"page"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.tan","page":"Tangent","title":"Base.tan","text":"tan(x)\n\nCompute tangent of x, where x is in radians.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.Math.tand","page":"Tangent","title":"Base.Math.tand","text":"tand(x)\n\nCompute tangent of x, where x is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.Math.tanpi","page":"Tangent","title":"Base.Math.tanpi","text":"tanpi(x)\n\nCompute tan(pi x) more accurately than tan(pi*x), especially for large x.\n\ncompat: Julia 1.10\nThis function requires at least Julia 1.10.\n\nSee also tand, sinpi, cospi, sincospi.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.tanh","page":"Tangent","title":"Base.tanh","text":"tanh(x)\n\nCompute hyperbolic tangent of x.\n\nSee also tan, atanh.\n\nExamples\n\njulia> tanh.(-3:3f0)  # Here 3f0 isa Float32\n7-element Vector{Float32}:\n -0.9950548\n -0.9640276\n -0.7615942\n  0.0\n  0.7615942\n  0.9640276\n  0.9950548\n\njulia> tan.(im .* (1:3))\n3-element Vector{ComplexF64}:\n 0.0 + 0.7615941559557649im\n 0.0 + 0.9640275800758169im\n 0.0 + 0.9950547536867306im\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.atan","page":"Tangent","title":"Base.atan","text":"atan(y)\natan(y, x)\n\nCompute the inverse tangent of y or y/x, respectively.\n\nFor one real argument, this is the angle in radians between the positive x-axis and the point (1, y), returning a value in the interval -pi2 pi2.\n\nFor two arguments, this is the angle in radians between the positive x-axis and the point (x, y), returning a value in the interval -pi pi. This corresponds to a standard atan2 function. Note that by convention atan(0.0,x) is defined as pi and atan(-0.0,x) is defined as -pi when x < 0.\n\nSee also atand for degrees.\n\nExamples\n\njulia> rad2deg(atan(-1/√3))\n-30.000000000000004\n\njulia> rad2deg(atan(-1, √3))\n-30.000000000000004\n\njulia> rad2deg(atan(1, -√3))\n150.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.Math.atand","page":"Tangent","title":"Base.Math.atand","text":"atand(y)\natand(y,x)\n\nCompute the inverse tangent of y or y/x, respectively, where the output is in degrees.\n\ncompat: Julia 1.7\nThe one-argument method supports square matrix arguments as of Julia 1.7.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Tangent/#Base.atanh","page":"Tangent","title":"Base.atanh","text":"atanh(x)\n\nCompute the inverse hyperbolic tangent of x.\n\n\n\n\n\n","category":"function"},{"location":"Packages/ImagesProcessing/#Images-Processing-Pkg","page":"Images Processing Pkg","title":"Images Processing Pkg","text":"","category":"section"},{"location":"Packages/ImagesProcessing/","page":"Images Processing Pkg","title":"Images Processing Pkg","text":"Search Result:","category":"page"},{"location":"Packages/ImagesProcessing/","page":"Images Processing Pkg","title":"Images Processing Pkg","text":"🔗#image-processing - JuliaHub\n🔗image processing - Github","category":"page"},{"location":"ElementaryMath/Exp-and-Log/Power/#Power","page":"Power","title":"Power","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/Power/","page":"Power","title":"Power","text":"Base.ispow2\nBase.prevpow\nBase.nextpow\nBase.powermod","category":"page"},{"location":"ElementaryMath/Exp-and-Log/Power/#Base.ispow2","page":"Power","title":"Base.ispow2","text":"ispow2(n::Number) -> Bool\n\nTest whether n is an integer power of two.\n\nSee also count_ones, prevpow, nextpow.\n\nExamples\n\njulia> ispow2(4)\ntrue\n\njulia> ispow2(5)\nfalse\n\njulia> ispow2(4.5)\nfalse\n\njulia> ispow2(0.25)\ntrue\n\njulia> ispow2(1//8)\ntrue\n\ncompat: Julia 1.6\nSupport for non-Integer arguments was added in Julia 1.6.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Power/#Base.prevpow","page":"Power","title":"Base.prevpow","text":"prevpow(a, x)\n\nThe largest a^n not greater than x, where n is a non-negative integer. a must be greater than 1, and x must not be less than 1.\n\nSee also nextpow, isqrt.\n\nExamples\n\njulia> prevpow(2, 7)\n4\n\njulia> prevpow(2, 9)\n8\n\njulia> prevpow(5, 20)\n5\n\njulia> prevpow(4, 16)\n16\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Power/#Base.nextpow","page":"Power","title":"Base.nextpow","text":"nextpow(a, x)\n\nThe smallest a^n not less than x, where n is a non-negative integer. a must be greater than 1, and x must be greater than 0.\n\nSee also prevpow.\n\nExamples\n\njulia> nextpow(2, 7)\n8\n\njulia> nextpow(2, 9)\n16\n\njulia> nextpow(5, 20)\n25\n\njulia> nextpow(4, 16)\n16\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/Power/#Base.powermod","page":"Power","title":"Base.powermod","text":"powermod(x::Integer, p::Integer, m)\n\nCompute x^p pmod m.\n\nExamples\n\njulia> powermod(2, 6, 5)\n4\n\njulia> mod(2^6, 5)\n4\n\njulia> powermod(5, 2, 20)\n5\n\njulia> powermod(5, 2, 19)\n6\n\njulia> powermod(5, 3, 19)\n11\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Hypotenuse/#Hypotenuse","page":"Hypotenuse","title":"Hypotenuse","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Hypotenuse/","page":"Hypotenuse","title":"Hypotenuse","text":"Base.hypot","category":"page"},{"location":"ElementaryMath/Trigonometry/Hypotenuse/#Base.Math.hypot","page":"Hypotenuse","title":"Base.Math.hypot","text":"hypot(x, y)\n\nCompute the hypotenuse sqrtx^2+y^2 avoiding overflow and underflow.\n\nThis code is an implementation of the algorithm described in: An Improved Algorithm for hypot(a,b) by Carlos F. Borges The article is available online at arXiv at the link   https://arxiv.org/abs/1904.09481\n\nhypot(x...)\n\nCompute the hypotenuse sqrtsum x_i^2 avoiding overflow and underflow.\n\nSee also norm in the LinearAlgebra standard library.\n\nExamples\n\njulia> a = Int64(10)^10;\n\njulia> hypot(a, a)\n1.4142135623730951e10\n\njulia> √(a^2 + a^2) # a^2 overflows\nERROR: DomainError with -2.914184810805068e18:\nsqrt was called with a negative real argument but will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\nStacktrace:\n[...]\n\njulia> hypot(3, 4im)\n5.0\n\njulia> hypot(-5.7)\n5.7\n\njulia> hypot(3, 4im, 12.0)\n13.0\n\njulia> using LinearAlgebra\n\njulia> norm([a, a, a, a]) == hypot(a, a, a, a)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Cosecant","page":"Cosecant","title":"Cosecant","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Cosecant/","page":"Cosecant","title":"Cosecant","text":"Base.csc\nBase.cscd\nBase.csch\nBase.acsc\nBase.acscd\nBase.acsch","category":"page"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.csc","page":"Cosecant","title":"Base.Math.csc","text":"csc(x)\n\nCompute the cosecant of x, where x is in radians.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.cscd","page":"Cosecant","title":"Base.Math.cscd","text":"cscd(x)\n\nCompute the cosecant of x, where x is in degrees.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.csch","page":"Cosecant","title":"Base.Math.csch","text":"csch(x)\n\nCompute the hyperbolic cosecant of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.acsc","page":"Cosecant","title":"Base.Math.acsc","text":"acsc(x)\n\nCompute the inverse cosecant of x, where the output is in radians. \n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.acscd","page":"Cosecant","title":"Base.Math.acscd","text":"acscd(x)\n\nCompute the inverse cosecant of x, where the output is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cosecant/#Base.Math.acsch","page":"Cosecant","title":"Base.Math.acsch","text":"acsch(x)\n\nCompute the inverse hyperbolic cosecant of x. \n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TheMissingDoc4Julia","category":"page"},{"location":"#The-Missing-Doc-for-Julia","page":"Home","title":"The Missing Doc for Julia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Exploring how to organize docs better.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for inkydragon/TheMissingDoc4Julia.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This project is intended to be a supplement to the official julia documentation. When possible, much of the project will be merged into the julia documentation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This project is a reference.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Reference guides are technical descriptions of the machinery and how to operate it. Reference material is information-oriented.—— 🔗Reference - diataxis.fr","category":"page"},{"location":"#Chinese-Doc","page":"Home","title":"Chinese Doc","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you're a Chinese user of Julia, you might want to check:","category":"page"},{"location":"","page":"Home","title":"Home","text":"如果你是一个 Julia 的中文用户，你可能想要看看：","category":"page"},{"location":"","page":"Home","title":"Home","text":"Julia 中文文档 | JuliaCN\nSyslab 使用手册 | tongyuan.cc","category":"page"},{"location":"#Related-Julia-Issues","page":"Home","title":"Related Julia Issues","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Separate documentation page for all function (🔗JuliaLang/julia#29552)\nAuto-generated separate reference pages for Julia objects / docstrings (🔗JuliaDocs/Documenter.jl#2133)","category":"page"},{"location":"Mathematics/#Mathematics","page":"Mathematics","title":"Mathematics","text":"","category":"section"},{"location":"Mathematics/#Base","page":"Mathematics","title":"Base","text":"","category":"section"},{"location":"Mathematics/","page":"Mathematics","title":"Mathematics","text":"Elementary Math","category":"page"},{"location":"Mathematics/#Stdlib","page":"Mathematics","title":"Stdlib","text":"","category":"section"},{"location":"Mathematics/","page":"Mathematics","title":"Mathematics","text":"Random Numbers\nLinear Algebra\nSparse Arrays","category":"page"},{"location":"Mathematics/#Packages","page":"Mathematics","title":"Packages","text":"","category":"section"},{"location":"Mathematics/","page":"Mathematics","title":"Mathematics","text":"Interpolation\nOptimization\nNumerical Integration and Differential Equations\nFourier Transform and Filtering\nGraph and Network Algorithms\nComputational Geometry\nQuantum Computing","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Function-Index","page":"Function Index","title":"Function Index","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"See Also: Functions List - SpecialFunctions.jl","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"By default, all functions are provided by SpecialFunctions.jl.\n❌: means not implemented","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Gamma-Functions","page":"Function Index","title":"Gamma Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Gamma Function - DLMF\nIncomplete Gamma and Related Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Function Description\ngamma(z) gamma function\nloggamma(x) log(gamma(x))\nlogabsgamma(x) log(abs(gamma(x)))\ndigamma(x) derivative of loggamma\ntrigamma(x) second derivative of loggamma\npolygamma(m,x) (m+1)-th derivative of the loggamma\ngamma(a,z) incomplete gamma function\nloggamma(a,z) log(gamma(a,x))\ngamma_inc(a,x) incomplete gamma function\ngamma_inc_inv(a,p,q) inverse of the incomplete gamma function","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Beta-Functions","page":"Function Index","title":"Beta Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Function Description\nbeta(x,y) beta function\nlogbeta(x,y) log(beta(x,y))\nlogabsbeta(x,y) log(abs(beta(x,y)))\nbeta_inc(a,b,x,y) incomplete beta function\nbeta_inc_inv(a,b,p,q) inverse of the incomplete beta function","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Exponential-and-Trigonometric-Integrals","page":"Function Index","title":"Exponential and Trigonometric Integrals","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Exponential, Logarithmic, Sine, and Cosine Integrals - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Function Description\nexpint(ν, z) exponential integral  operatornameE_nu(z)\nexpinti(x) exponential integral  operatornameEi(x)\nexpintx(x) scaled exponential integral  e^z operatornameE_nu(z)\nsinint(x) sine integral  operatornameSi(x)\ncosint(x) cosine integral  operatornameCi(x)\nsinhint(x) ❌ hyperbolic sine integral  operatornameShi(x)\ncoshint(x) ❌ hyperbolic cosine integral  operatornameChi(x)","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Error-Functions,-Dawson’s-and-Fresnel-Integrals","page":"Function Index","title":"Error Functions, Dawson’s and Fresnel Integrals","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Error Functions, Dawson’s and Fresnel Integrals - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Airy-Functions","page":"Function Index","title":"Airy Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Airy and Related Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Bessel-Functions","page":"Function Index","title":"Bessel Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Bessel Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Struve-Functions","page":"Function Index","title":"Struve Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Struve and Related Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Parabolic-Cylinder-Functions","page":"Function Index","title":"Parabolic Cylinder Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Parabolic Cylinder Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Confluent-Hypergeometric-Functions","page":"Function Index","title":"Confluent Hypergeometric Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Confluent Hypergeometric Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Legendre-Functions","page":"Function Index","title":"Legendre Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Legendre and Related Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Hypergeometric-Function","page":"Function Index","title":"Hypergeometric Function","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Hypergeometric Function - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Elliptic-Integrals","page":"Function Index","title":"Elliptic Integrals","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Elliptic Integrals - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Zeta-Functions","page":"Function Index","title":"Zeta Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Zeta and Related Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Mathieu-Functions","page":"Function Index","title":"Mathieu Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Mathieu Functions and Hill’s Equation - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Spheroidal-Wave-Functions","page":"Function Index","title":"Spheroidal Wave Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Spheroidal Wave Functions - DLMF","category":"page"},{"location":"ElementaryMath/SpecialFunctions/functions/#Other-Special-Functions","page":"Function Index","title":"Other Special Functions","text":"","category":"section"},{"location":"ElementaryMath/SpecialFunctions/functions/","page":"Function Index","title":"Function Index","text":"Lambert W-Function - DLMF","category":"page"},{"location":"ElementaryMath/Arithmetic/Multiplication/Multiplication/#Multiplication","page":"Multiplication","title":"Multiplication","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Multiplication/Multiplication/","page":"Multiplication","title":"Multiplication","text":"Base.:*(::Any, ::Any...)\nBase.prod\nBase.cumprod","category":"page"},{"location":"ElementaryMath/Arithmetic/Multiplication/Multiplication/#Base.:*-Tuple{Any, Vararg{Any}}","page":"Multiplication","title":"Base.:*","text":"*(x, y...)\n\nMultiplication operator.\n\nInfix x*y*z*... calls this function with all arguments, i.e. *(x, y, z, ...), which by default then calls (x*y) * z * ... starting from the left.\n\nJuxtaposition such as 2pi also calls *(2, pi). Note that this operation has higher precedence than a literal *. Note also that juxtaposition \"0x...\" (integer zero times a variable whose name starts with x) is forbidden as it clashes with unsigned integer literals: 0x01 isa UInt8.\n\nNote that overflow is possible for most integer types, including the default Int, when multiplying large numbers.\n\nExamples\n\njulia> 2 * 7 * 8\n112\n\njulia> *(2, 7, 8)\n112\n\njulia> [2 0; 0 3] * [1, 10]  # matrix * vector\n2-element Vector{Int64}:\n  2\n 30\n\njulia> 1/2pi, 1/2*pi  # juxtaposition has higher precedence\n(0.15915494309189535, 1.5707963267948966)\n\njulia> x = [1, 2]; x'x  # adjoint vector * vector\n5\n\n\n\n\n\n","category":"method"},{"location":"ElementaryMath/Arithmetic/Multiplication/Multiplication/#Base.prod","page":"Multiplication","title":"Base.prod","text":"prod(f, itr; [init])\n\nReturn the product of f applied to each element of itr.\n\nThe return type is Int for signed integers of less than system word size, and UInt for unsigned integers of less than system word size.  For all other arguments, a common return type is found to which all arguments are promoted.\n\nThe value returned for empty itr can be specified by init. It must be the multiplicative identity (i.e. one) as it is unspecified whether init is used for non-empty collections.\n\ncompat: Julia 1.6\nKeyword argument init requires Julia 1.6 or later.\n\nExamples\n\njulia> prod(abs2, [2; 3; 4])\n576\n\n\n\n\n\nprod(itr; [init])\n\nReturn the product of all elements of a collection.\n\nThe return type is Int for signed integers of less than system word size, and UInt for unsigned integers of less than system word size.  For all other arguments, a common return type is found to which all arguments are promoted.\n\nThe value returned for empty itr can be specified by init. It must be the multiplicative identity (i.e. one) as it is unspecified whether init is used for non-empty collections.\n\ncompat: Julia 1.6\nKeyword argument init requires Julia 1.6 or later.\n\nSee also: reduce, cumprod, any.\n\nExamples\n\njulia> prod(1:5)\n120\n\njulia> prod(1:5; init = 1.0)\n120.0\n\n\n\n\n\nprod(A::AbstractArray; dims)\n\nMultiply elements of an array over the given dimensions.\n\nExamples\n\njulia> A = [1 2; 3 4]\n2×2 Matrix{Int64}:\n 1  2\n 3  4\n\njulia> prod(A, dims=1)\n1×2 Matrix{Int64}:\n 3  8\n\njulia> prod(A, dims=2)\n2×1 Matrix{Int64}:\n  2\n 12\n\n\n\n\n\nprod(f, A::AbstractArray; dims)\n\nMultiply the results of calling the function f on each element of an array over the given dimensions.\n\nExamples\n\njulia> A = [1 2; 3 4]\n2×2 Matrix{Int64}:\n 1  2\n 3  4\n\njulia> prod(abs2, A, dims=1)\n1×2 Matrix{Int64}:\n 9  64\n\njulia> prod(abs2, A, dims=2)\n2×1 Matrix{Int64}:\n   4\n 144\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Multiplication/Multiplication/#Base.cumprod","page":"Multiplication","title":"Base.cumprod","text":"cumprod(A; dims::Integer)\n\nCumulative product along the dimension dim. See also cumprod! to use a preallocated output array, both for performance and to control the precision of the output (e.g. to avoid overflow).\n\nExamples\n\njulia> a = Int8[1 2 3; 4 5 6];\n\njulia> cumprod(a, dims=1)\n2×3 Matrix{Int64}:\n 1   2   3\n 4  10  18\n\njulia> cumprod(a, dims=2)\n2×3 Matrix{Int64}:\n 1   2    6\n 4  20  120\n\n\n\n\n\ncumprod(itr)\n\nCumulative product of an iterator.\n\nSee also cumprod!, accumulate, cumsum.\n\ncompat: Julia 1.5\ncumprod on a non-array iterator requires at least Julia 1.5.\n\nExamples\n\njulia> cumprod(fill(1//2, 3))\n3-element Vector{Rational{Int64}}:\n 1//2\n 1//4\n 1//8\n\njulia> cumprod((1, 2, 1, 3, 1))\n(1, 2, 2, 6, 6)\n\njulia> cumprod(\"julia\")\n5-element Vector{String}:\n \"j\"\n \"ju\"\n \"jul\"\n \"juli\"\n \"julia\"\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Complex-Numbers","page":"Complex Numbers","title":"Complex Numbers","text":"","category":"section"},{"location":"ElementaryMath/Complex/Complex/","page":"Complex Numbers","title":"Complex Numbers","text":"abs\nabs2\ncomplex\nim\nreal\nimag\nreim\nconj\nangle\nisreal","category":"page"},{"location":"ElementaryMath/Complex/Complex/#Sign","page":"Complex Numbers","title":"Sign","text":"","category":"section"},{"location":"ElementaryMath/Complex/Complex/","page":"Complex Numbers","title":"Complex Numbers","text":"sign\nsignbit\nflipsign\ncopysign","category":"page"},{"location":"ElementaryMath/Complex/Complex/","page":"Complex Numbers","title":"Complex Numbers","text":"Base.abs\nBase.abs2\n\nBase.complex\nBase.im\n\nBase.real\nBase.imag\nBase.reim\nBase.conj\nBase.angle\n\nBase.isreal\nBase.sign\nBase.signbit\nBase.flipsign\nBase.copysign","category":"page"},{"location":"ElementaryMath/Complex/Complex/#Base.abs","page":"Complex Numbers","title":"Base.abs","text":"abs(x)\n\nThe absolute value of x.\n\nWhen abs is applied to signed integers, overflow may occur, resulting in the return of a negative value. This overflow occurs only when abs is applied to the minimum representable value of a signed integer. That is, when x == typemin(typeof(x)), abs(x) == x < 0, not -x as might be expected.\n\nSee also: abs2, unsigned, sign.\n\nExamples\n\njulia> abs(-3)\n3\n\njulia> abs(1 + im)\n1.4142135623730951\n\njulia> abs.(Int8[-128 -127 -126 0 126 127])  # overflow at typemin(Int8)\n1×6 Matrix{Int8}:\n -128  127  126  0  126  127\n\njulia> maximum(abs, [1, -2, 3, -4])\n4\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.abs2","page":"Complex Numbers","title":"Base.abs2","text":"abs2(x)\n\nSquared absolute value of x.\n\nThis can be faster than abs(x)^2, especially for complex numbers where abs(x) requires a square root via hypot.\n\nSee also abs, conj, real.\n\nExamples\n\njulia> abs2(-3)\n9\n\njulia> abs2(3.0 + 4.0im)\n25.0\n\njulia> sum(abs2, [1+2im, 3+4im])  # LinearAlgebra.norm(x)^2\n30\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.complex","page":"Complex Numbers","title":"Base.complex","text":"complex(r, [i])\n\nConvert real numbers or arrays to complex. i defaults to zero.\n\nExamples\n\njulia> complex(7)\n7 + 0im\n\njulia> complex([1, 2, 3])\n3-element Vector{Complex{Int64}}:\n 1 + 0im\n 2 + 0im\n 3 + 0im\n\n\n\n\n\ncomplex(T::Type)\n\nReturn an appropriate type which can represent a value of type T as a complex number. Equivalent to typeof(complex(zero(T))) if T does not contain Missing.\n\nExamples\n\njulia> complex(Complex{Int})\nComplex{Int64}\n\njulia> complex(Int)\nComplex{Int64}\n\njulia> complex(Union{Int, Missing})\nUnion{Missing, Complex{Int64}}\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.im","page":"Complex Numbers","title":"Base.im","text":"im\n\nThe imaginary unit.\n\nSee also: imag, angle, complex.\n\nExamples\n\njulia> im * im\n-1 + 0im\n\njulia> (2.0 + 3im)^2\n-5.0 + 12.0im\n\n\n\n\n\n","category":"constant"},{"location":"ElementaryMath/Complex/Complex/#Base.real","page":"Complex Numbers","title":"Base.real","text":"real(z)\n\nReturn the real part of the complex number z.\n\nSee also: imag, reim, complex, isreal, Real.\n\nExamples\n\njulia> real(1 + 3im)\n1\n\n\n\n\n\nreal(T::Type)\n\nReturn the type that represents the real part of a value of type T. e.g: for T == Complex{R}, returns R. Equivalent to typeof(real(zero(T))).\n\nExamples\n\njulia> real(Complex{Int})\nInt64\n\njulia> real(Float64)\nFloat64\n\n\n\n\n\nreal(A::AbstractArray)\n\nReturn an array containing the real part of each entry in array A.\n\nEquivalent to real.(A), except that when eltype(A) <: Real A is returned without copying, and that when A has zero dimensions, a 0-dimensional array is returned (rather than a scalar).\n\nExamples\n\njulia> real([1, 2im, 3 + 4im])\n3-element Vector{Int64}:\n 1\n 0\n 3\n\njulia> real(fill(2 - im))\n0-dimensional Array{Int64, 0}:\n2\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.imag","page":"Complex Numbers","title":"Base.imag","text":"imag(z)\n\nReturn the imaginary part of the complex number z.\n\nSee also: conj, reim, adjoint, angle.\n\nExamples\n\njulia> imag(1 + 3im)\n3\n\n\n\n\n\nimag(A::AbstractArray)\n\nReturn an array containing the imaginary part of each entry in array A.\n\nEquivalent to imag.(A), except that when A has zero dimensions, a 0-dimensional array is returned (rather than a scalar).\n\nExamples\n\njulia> imag([1, 2im, 3 + 4im])\n3-element Vector{Int64}:\n 0\n 2\n 4\n\njulia> imag(fill(2 - im))\n0-dimensional Array{Int64, 0}:\n-1\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.reim","page":"Complex Numbers","title":"Base.reim","text":"reim(z)\n\nReturn a tuple of the real and imaginary parts of the complex number z.\n\nExamples\n\njulia> reim(1 + 3im)\n(1, 3)\n\n\n\n\n\nreim(A::AbstractArray)\n\nReturn a tuple of two arrays containing respectively the real and the imaginary part of each entry in A.\n\nEquivalent to (real.(A), imag.(A)), except that when eltype(A) <: Real A is returned without copying to represent the real part, and that when A has zero dimensions, a 0-dimensional array is returned (rather than a scalar).\n\nExamples\n\njulia> reim([1, 2im, 3 + 4im])\n([1, 0, 3], [0, 2, 4])\n\njulia> reim(fill(2 - im))\n(fill(2), fill(-1))\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.conj","page":"Complex Numbers","title":"Base.conj","text":"conj(z)\n\nCompute the complex conjugate of a complex number z.\n\nSee also: angle, adjoint.\n\nExamples\n\njulia> conj(1 + 3im)\n1 - 3im\n\n\n\n\n\nconj(A::AbstractArray)\n\nReturn an array containing the complex conjugate of each entry in array A.\n\nEquivalent to conj.(A), except that when eltype(A) <: Real A is returned without copying, and that when A has zero dimensions, a 0-dimensional array is returned (rather than a scalar).\n\nExamples\n\njulia> conj([1, 2im, 3 + 4im])\n3-element Vector{Complex{Int64}}:\n 1 + 0im\n 0 - 2im\n 3 - 4im\n\njulia> conj(fill(2 - im))\n0-dimensional Array{Complex{Int64}, 0}:\n2 + 1im\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.angle","page":"Complex Numbers","title":"Base.angle","text":"angle(z)\n\nCompute the phase angle in radians of a complex number z.\n\nReturns a number -pi ≤ angle(z) ≤ pi, and is thus discontinuous along the negative real axis.\n\nSee also: atan, cis, rad2deg.\n\nExamples\n\njulia> rad2deg(angle(1 + im))\n45.0\n\njulia> rad2deg(angle(1 - im))\n-45.0\n\njulia> rad2deg(angle(-1 + 1e-20im))\n180.0\n\njulia> rad2deg(angle(-1 - 1e-20im))\n-180.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.isreal","page":"Complex Numbers","title":"Base.isreal","text":"isreal(x) -> Bool\n\nTest whether x or all its elements are numerically equal to some real number including infinities and NaNs. isreal(x) is true if isequal(x, real(x)) is true.\n\nExamples\n\njulia> isreal(5.)\ntrue\n\njulia> isreal(1 - 3im)\nfalse\n\njulia> isreal(Inf + 0im)\ntrue\n\njulia> isreal([4.; complex(0,1)])\nfalse\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.sign","page":"Complex Numbers","title":"Base.sign","text":"sign(x)\n\nReturn zero if x==0 and xx otherwise (i.e., ±1 for real x).\n\nSee also signbit, zero, copysign, flipsign.\n\nExamples\n\njulia> sign(-4.0)\n-1.0\n\njulia> sign(99)\n1\n\njulia> sign(-0.0)\n-0.0\n\njulia> sign(0 + im)\n0.0 + 1.0im\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.signbit","page":"Complex Numbers","title":"Base.signbit","text":"signbit(x)\n\nReturn true if the value of the sign of x is negative, otherwise false.\n\nSee also sign and copysign.\n\nExamples\n\njulia> signbit(-4)\ntrue\n\njulia> signbit(5)\nfalse\n\njulia> signbit(5.5)\nfalse\n\njulia> signbit(-4.1)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.flipsign","page":"Complex Numbers","title":"Base.flipsign","text":"flipsign(x, y)\n\nReturn x with its sign flipped if y is negative. For example abs(x) = flipsign(x,x).\n\nExamples\n\njulia> flipsign(5, 3)\n5\n\njulia> flipsign(5, -3)\n-5\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Complex/Complex/#Base.copysign","page":"Complex Numbers","title":"Base.copysign","text":"copysign(x, y) -> z\n\nReturn z which has the magnitude of x and the same sign as y.\n\nExamples\n\njulia> copysign(1, -2)\n-1\n\njulia> copysign(-1, 2)\n1\n\n\n\n\n\n","category":"function"},{"location":"Packages/Quantum/#Quantum-Computing-Pkg","page":"Quantum Computing Pkg","title":"Quantum Computing Pkg","text":"","category":"section"},{"location":"Packages/Quantum/","page":"Quantum Computing Pkg","title":"Quantum Computing Pkg","text":"tip: Physics/Quantum mechanics Organization\nPhysics/Quantum mechanics - julialang.org","category":"page"},{"location":"Packages/Quantum/","page":"Quantum Computing Pkg","title":"Quantum Computing Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Quantum/","page":"Quantum Computing Pkg","title":"Quantum Computing Pkg","text":"🔗quantum - JuliaHub\n🔗quantum - Github","category":"page"},{"location":"Packages/FindPackages/#How-to-Find-Packages","page":"Julia Packages","title":"How to Find Packages","text":"","category":"section"},{"location":"Packages/FindPackages/","page":"Julia Packages","title":"Julia Packages","text":"Search Engine\n🔗JuliaHub\n🔗JuliaPackages\n🔗Github Search","category":"page"},{"location":"cheatsheet/matlab/#Matlab-Julia","page":"Matlab","title":"Matlab => Julia","text":"","category":"section"},{"location":"cheatsheet/matlab/#Symbolic-Math-Toolbox","page":"Matlab","title":"Symbolic Math Toolbox","text":"","category":"section"},{"location":"cheatsheet/matlab/","page":"Matlab","title":"Matlab","text":"Docs: Symbolic Math Toolbox - Mathematics","category":"page"},{"location":"cheatsheet/matlab/#Other-Special-Functions","page":"Matlab","title":"Other Special Functions","text":"","category":"section"},{"location":"cheatsheet/matlab/","page":"Matlab","title":"Matlab","text":"Hypergeometric and Whittaker Functions","category":"page"},{"location":"cheatsheet/matlab/","page":"Matlab","title":"Matlab","text":"Need: JuliaMath/HypergeometricFunctions.jl","category":"page"},{"location":"cheatsheet/matlab/","page":"Matlab","title":"Matlab","text":"hypergeom:   HypergeometricFunctions.pFq\nkummerU:   HypergeometricFunctions.U\nmeijerG:   missing\nwhittakerM   missing\nwhittakerW   missing","category":"page"},{"location":"Packages/FourierTransform-and-Filtering/#Fourier-Transform-and-Filtering-Pkg","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform and Filtering Pkg","text":"","category":"section"},{"location":"Packages/FourierTransform-and-Filtering/#Fourier-Transform","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform","text":"","category":"section"},{"location":"Packages/FourierTransform-and-Filtering/","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform and Filtering Pkg","text":"Search Result:","category":"page"},{"location":"Packages/FourierTransform-and-Filtering/","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform and Filtering Pkg","text":"🔗#fft - JuliaHub\n🔗fourier transform - Github","category":"page"},{"location":"Packages/FourierTransform-and-Filtering/#Digital-Filtering","page":"Fourier Transform and Filtering Pkg","title":"Digital Filtering","text":"","category":"section"},{"location":"Packages/FourierTransform-and-Filtering/","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform and Filtering Pkg","text":"Search Result:","category":"page"},{"location":"Packages/FourierTransform-and-Filtering/","page":"Fourier Transform and Filtering Pkg","title":"Fourier Transform and Filtering Pkg","text":"🔗filtering - JuliaHub\n🔗filtering - Github","category":"page"},{"location":"stdlib/LinearAlgebra/#Linear-Algebra","page":"Linear Algebra","title":"Linear Algebra","text":"","category":"section"},{"location":"stdlib/LinearAlgebra/","page":"Linear Algebra","title":"Linear Algebra","text":"See Stdlib: LinearAlgebra","category":"page"},{"location":"GettingStarted/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"GettingStarted/","page":"Getting Started","title":"Getting Started","text":"🔗Getting Started - docs.julialang.org\n🔗Get Started with Julia - julialang.org","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/cis/#cis","page":"cis","title":"cis","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/SinCos/cis/","page":"cis","title":"cis","text":"Base.cis","category":"page"},{"location":"ElementaryMath/Trigonometry/SinCos/cis/#Base.cis","page":"cis","title":"Base.cis","text":"cis(x)\n\nMore efficient method for exp(im*x) by using Euler's formula: cos(x) + i sin(x) = exp(i x).\n\nSee also cispi, sincos, exp, angle.\n\nExamples\n\njulia> cis(π) ≈ -1\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#sin","page":"sin","title":"sin","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"Compute sine of parameter in radians.","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"using LinearAlgebra","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"Base.sin","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Base.sin","page":"sin","title":"Base.sin","text":"sin(x)\n\nCompute sine of x, where x is in radians.\n\nSee also sind, sinpi, sincos, cis, asin.\n\nExamples\n\njulia> round.(sin.(range(0, 2pi, length=9)'), digits=3)\n1×9 Matrix{Float64}:\n 0.0  0.707  1.0  0.707  0.0  -0.707  -1.0  -0.707  -0.0\n\njulia> sind(45)\n0.7071067811865476\n\njulia> sinpi(1/4)\n0.7071067811865475\n\njulia> round.(sincos(pi/6), digits=3)\n(0.5, 0.866)\n\njulia> round(cis(pi/6), digits=3)\n0.866 + 0.5im\n\njulia> round(exp(im*pi/6), digits=3)\n0.866 + 0.5im\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"NOTE: longer desc.","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Methods","page":"sin","title":"Methods","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"With Number and Missing input:","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"methods(sin, (Any,), [Base, Base.Math, Base.MathConstants, Base.MPFR])","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Examples","page":"sin","title":"Examples","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Real-Numbers","page":"sin","title":"Real Numbers","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(0)\n0.0\n\njulia> sin(0.5*pi)\n1.0\n\njulia> sin(pi)\n0.0\n\njulia> pi\nπ = 3.1415926535897...\n\njulia> sin.([0 0.5*pi pi 1.5*pi 2*pi])\n1×5 Matrix{Float64}:\n 0.0  1.0  1.22465e-16  -1.0  -2.44929e-16","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"tip: dot-style function call\nf.(args) means eval args one by one.","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"big float, sin(pi/6) == sin(30°) == 1/2:","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(pi/6)\n0.49999999999999994\n\njulia> sin(pi/big\"6\")\n0.4999999999999999999999999999999999999999999999999999999999999999999999999999957","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"special float NaN, Inf:","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(NaN)\nNaN\n\njulia> sin(Inf)\nERROR: DomainError with Inf:\nsin(x) is only defined for finite x.\n[...]","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"plot","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"using UnicodePlots\nlineplot(-π, π, sin)","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Complex","page":"sin","title":"Complex","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(0+0im)\n0.0 + 0.0im","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"plot real part","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"using UnicodePlots\nsin_real(x, y) = real(sin(x + y*im))\nsurfaceplot(-2pi:0.01:2pi, -pi:0.01:pi, sin_real)","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Missing","page":"sin","title":"Missing","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(missing)\nmissing","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Nothing","page":"sin","title":"Nothing","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin(nothing)\nERROR: MethodError: no method matching sin(::Nothing)\n[...]","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Tips","page":"sin","title":"Tips","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"Call sinpi to compute sin(x*pi)","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#See-Also","page":"sin","title":"See Also","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"sinpi, sincos, sind, sinh, asin","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Extended-Inputs","page":"sin","title":"Extended Inputs","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Matrix","page":"sin","title":"Matrix","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"With Array like input:","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"methods(sin, (Any,), [LinearAlgebra])","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"# TODO\nBase.sin(AbstractMatrix)","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"julia> sin([1 2; 3 4])\n2×2 Matrix{Float64}:\n -0.465581  -0.148424\n -0.222637  -0.688218\n\njulia> sin.([1 2; 3 4])\n2×2 Matrix{Float64}:\n 0.841471   0.909297\n 0.14112   -0.756802\n\njulia> sin([1 2; 3 4]) == sin.([1 2; 3 4])\nfalse","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Tech-Notes","page":"sin","title":"Tech Notes","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"sin(::Real): by pure julia\nsin(::BigFloat): by MPFR","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#Version-History","page":"sin","title":"Version History","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"Introduced in 2018 (1.0)","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sin/#External-Links","page":"sin","title":"External Links","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sin/","page":"sin","title":"sin","text":"🔗Sine - Wikipedia\n🔗Sine - MathWorld","category":"page"},{"location":"Graphics/#Graphics","page":"Graphics","title":"Graphics","text":"","category":"section"},{"location":"Graphics/","page":"Graphics","title":"Graphics","text":"Plotting\nImages Processing","category":"page"},{"location":"Packages/SpecialFunction/#Special-Functions-Pkg","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"","category":"section"},{"location":"Packages/SpecialFunction/","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"Search Result:","category":"page"},{"location":"Packages/SpecialFunction/","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"🔗special functions - JuliaHub\n🔗special functions - Github","category":"page"},{"location":"Packages/SpecialFunction/#Bessels.jl","page":"Special Functions Pkg","title":"Bessels.jl","text":"","category":"section"},{"location":"Packages/SpecialFunction/","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"🔗JuliaMath/Bessels.jl – Bessel functions for real arguments and orders","category":"page"},{"location":"Packages/SpecialFunction/","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"Numerical routines for computing Bessel, Airy, and Hankel functions for real arguments. These routines are written in the Julia programming language and are self contained without any external dependencies.","category":"page"},{"location":"Packages/SpecialFunction/#Implementation-in-Other-Software","page":"Special Functions Pkg","title":"Implementation in Other Software","text":"","category":"section"},{"location":"Packages/SpecialFunction/","page":"Special Functions Pkg","title":"Special Functions Pkg","text":"Software Index - DLMF\nPython\nSciPy: 🔗Special Functions (scipy.special) - SciPy Manual\nmpmath: 🔗Mathematical functions — mpmath documentation\nSymPy: 🔗Special - SymPy Documentation\nSage: 🔗Built-in Functions\nMatlab: 🔗Special Functions - MATLAB & Simulink\nOctave: 🔗Special Functions - GNU Octave\nMathematica: 🔗Special Functions - Wolfram Language Documentation\nMaple: 🔗Special Functions: Example Worksheet - Maple Help\nSysLab: 🔗初等数学: 特殊函数 | Syslab 使用手册","category":"page"},{"location":"stdlib/SparseArrays/#Sparse-Arrays","page":"Sparse Arrays","title":"Sparse Arrays","text":"","category":"section"},{"location":"stdlib/SparseArrays/","page":"Sparse Arrays","title":"Sparse Arrays","text":"See Stdlib: SparseArrays","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sinc/#sinc","page":"sinc","title":"sinc","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Sine/sinc/","page":"sinc","title":"sinc","text":"Base.sinc","category":"page"},{"location":"ElementaryMath/Trigonometry/Sine/sinc/#Base.Math.sinc","page":"sinc","title":"Base.Math.sinc","text":"sinc(x)\n\nCompute normalized sinc function operatornamesinc(x) = sin(pi x)  (pi x) if x neq 0, and 1 if x = 0.\n\nSee also cosc, its derivative.\n\n\n\n\n\n","category":"function"},{"location":"Packages/Optimization/#Optimization-Pkg","page":"Optimization Pkg","title":"Optimization Pkg","text":"","category":"section"},{"location":"Packages/Optimization/","page":"Optimization Pkg","title":"Optimization Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Optimization/","page":"Optimization Pkg","title":"Optimization Pkg","text":"🔗#optimization - JuliaHub\n🔗#optimization - Github","category":"page"},{"location":"ElementaryMath/Trigonometry/Conversions/#Conversions","page":"Conversions","title":"Conversions","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Conversions/","page":"Conversions","title":"Conversions","text":"Base.rad2deg\nBase.deg2rad","category":"page"},{"location":"ElementaryMath/Trigonometry/Conversions/#Base.Math.rad2deg","page":"Conversions","title":"Base.Math.rad2deg","text":"rad2deg(x)\n\nConvert x from radians to degrees.\n\nSee also deg2rad.\n\nExamples\n\njulia> rad2deg(pi)\n180.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Conversions/#Base.Math.deg2rad","page":"Conversions","title":"Base.Math.deg2rad","text":"deg2rad(x)\n\nConvert x from degrees to radians.\n\nSee also rad2deg, sind, pi.\n\nExamples\n\njulia> deg2rad(90)\n1.5707963267948966\n\n\n\n\n\n","category":"function"},{"location":"dev/ideas/#Random-Ideas","page":"Random Ideas","title":"Random Ideas","text":"","category":"section"},{"location":"dev/ideas/","page":"Random Ideas","title":"Random Ideas","text":"put all docs into repl, then we could like to manual in functions docs.","category":"page"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Addition","page":"Addition","title":"Addition","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/","page":"Addition","title":"Addition","text":"Base.:(+)\nBase.sum\nBase.sum!\nBase.cumsum\nBase.cumsum!\nBase.add_sum","category":"page"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.:+","page":"Addition","title":"Base.:+","text":"+(x, y...)\n\nAddition operator.\n\nInfix x+y+z+... calls this function with all arguments, i.e. +(x, y, z, ...), which by default then calls (x+y) + z + ... starting from the left.\n\nNote that overflow is possible for most integer types, including the default Int, when adding large numbers.\n\nExamples\n\njulia> 1 + 20 + 4\n25\n\njulia> +(1, 20, 4)\n25\n\njulia> [1,2] + [3,4]\n2-element Vector{Int64}:\n 4\n 6\n\njulia> typemax(Int) + 1 < 0\ntrue\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.sum","page":"Addition","title":"Base.sum","text":"sum(f, itr; [init])\n\nSum the results of calling function f on each element of itr.\n\nThe return type is Int for signed integers of less than system word size, and UInt for unsigned integers of less than system word size.  For all other arguments, a common return type is found to which all arguments are promoted.\n\nThe value returned for empty itr can be specified by init. It must be the additive identity (i.e. zero) as it is unspecified whether init is used for non-empty collections.\n\ncompat: Julia 1.6\nKeyword argument init requires Julia 1.6 or later.\n\nExamples\n\njulia> sum(abs2, [2; 3; 4])\n29\n\nNote the important difference between sum(A) and reduce(+, A) for arrays with small integer eltype:\n\njulia> sum(Int8[100, 28])\n128\n\njulia> reduce(+, Int8[100, 28])\n-128\n\nIn the former case, the integers are widened to system word size and therefore the result is 128. In the latter case, no such widening happens and integer overflow results in -128.\n\n\n\n\n\nsum(itr; [init])\n\nReturn the sum of all elements in a collection.\n\nThe return type is Int for signed integers of less than system word size, and UInt for unsigned integers of less than system word size.  For all other arguments, a common return type is found to which all arguments are promoted.\n\nThe value returned for empty itr can be specified by init. It must be the additive identity (i.e. zero) as it is unspecified whether init is used for non-empty collections.\n\ncompat: Julia 1.6\nKeyword argument init requires Julia 1.6 or later.\n\nSee also: reduce, mapreduce, count, union.\n\nExamples\n\njulia> sum(1:20)\n210\n\njulia> sum(1:20; init = 0.0)\n210.0\n\n\n\n\n\nsum(A::AbstractArray; dims)\n\nSum elements of an array over the given dimensions.\n\nExamples\n\njulia> A = [1 2; 3 4]\n2×2 Matrix{Int64}:\n 1  2\n 3  4\n\njulia> sum(A, dims=1)\n1×2 Matrix{Int64}:\n 4  6\n\njulia> sum(A, dims=2)\n2×1 Matrix{Int64}:\n 3\n 7\n\n\n\n\n\nsum(f, A::AbstractArray; dims)\n\nSum the results of calling function f on each element of an array over the given dimensions.\n\nExamples\n\njulia> A = [1 2; 3 4]\n2×2 Matrix{Int64}:\n 1  2\n 3  4\n\njulia> sum(abs2, A, dims=1)\n1×2 Matrix{Int64}:\n 10  20\n\njulia> sum(abs2, A, dims=2)\n2×1 Matrix{Int64}:\n  5\n 25\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.sum!","page":"Addition","title":"Base.sum!","text":"sum!(r, A)\n\nSum elements of A over the singleton dimensions of r, and write results to r.\n\nwarning: Warning\nBehavior can be unexpected when any mutated argument shares memory with any other argument.\n\nExamples\n\njulia> A = [1 2; 3 4]\n2×2 Matrix{Int64}:\n 1  2\n 3  4\n\njulia> sum!([1; 1], A)\n2-element Vector{Int64}:\n 3\n 7\n\njulia> sum!([1 1], A)\n1×2 Matrix{Int64}:\n 4  6\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.cumsum","page":"Addition","title":"Base.cumsum","text":"cumsum(A; dims::Integer)\n\nCumulative sum along the dimension dims. See also cumsum! to use a preallocated output array, both for performance and to control the precision of the output (e.g. to avoid overflow).\n\nExamples\n\njulia> a = [1 2 3; 4 5 6]\n2×3 Matrix{Int64}:\n 1  2  3\n 4  5  6\n\njulia> cumsum(a, dims=1)\n2×3 Matrix{Int64}:\n 1  2  3\n 5  7  9\n\njulia> cumsum(a, dims=2)\n2×3 Matrix{Int64}:\n 1  3   6\n 4  9  15\n\nnote: Note\nThe return array's eltype is Int for signed integers of less than system word size  and UInt for unsigned integers of less than system word size. To preserve eltype of arrays with small signed or unsigned integer accumulate(+, A) should be used.julia> cumsum(Int8[100, 28])\n2-element Vector{Int64}:\n 100\n 128\n\njulia> accumulate(+,Int8[100, 28])\n2-element Vector{Int8}:\n  100\n -128In the former case, the integers are widened to system word size and therefore the result is Int64[100, 128]. In the latter case, no such widening happens and integer overflow results in Int8[100, -128].\n\n\n\n\n\ncumsum(itr)\n\nCumulative sum of an iterator.\n\nSee also accumulate to apply functions other than +.\n\ncompat: Julia 1.5\ncumsum on a non-array iterator requires at least Julia 1.5.\n\nExamples\n\njulia> cumsum(1:3)\n3-element Vector{Int64}:\n 1\n 3\n 6\n\njulia> cumsum((true, false, true, false, true))\n(1, 1, 2, 2, 3)\n\njulia> cumsum(fill(1, 2) for i in 1:3)\n3-element Vector{Vector{Int64}}:\n [1, 1]\n [2, 2]\n [3, 3]\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.cumsum!","page":"Addition","title":"Base.cumsum!","text":"cumsum!(B, A; dims::Integer)\n\nCumulative sum of A along the dimension dims, storing the result in B. See also cumsum.\n\nwarning: Warning\nBehavior can be unexpected when any mutated argument shares memory with any other argument.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Addition/Addition/#Base.add_sum","page":"Addition","title":"Base.add_sum","text":"Base.add_sum(x, y)\n\nThe reduction operator used in sum. The main difference from + is that small integers are promoted to Int/UInt.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Division/Division/#Division","page":"Division","title":"Division","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Division/Division/","page":"Division","title":"Division","text":"Base.:(/)\nBase.:\\(::Any, ::Any)","category":"page"},{"location":"ElementaryMath/Arithmetic/Division/Division/#Base.:/","page":"Division","title":"Base.:/","text":"/(x, y)\n\nRight division operator: multiplication of x by the inverse of y on the right.\n\nGives floating-point results for integer arguments. See ÷ for integer division, or // for Rational results.\n\nExamples\n\njulia> 1/2\n0.5\n\njulia> 4/2\n2.0\n\njulia> 4.5/2\n2.25\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Arithmetic/Division/Division/#Base.:\\-Tuple{Any, Any}","page":"Division","title":"Base.:\\","text":"\\(x, y)\n\nLeft division operator: multiplication of y by the inverse of x on the left. Gives floating-point results for integer arguments.\n\nExamples\n\njulia> 3 \\ 6\n2.0\n\njulia> inv(3) * 6\n2.0\n\njulia> A = [4 3; 2 1]; x = [5, 6];\n\njulia> A \\ x\n2-element Vector{Float64}:\n  6.5\n -7.0\n\njulia> inv(A) * x\n2-element Vector{Float64}:\n  6.5\n -7.0\n\n\n\n\n\n","category":"method"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Cotangent","page":"Cotangent","title":"Cotangent","text":"","category":"section"},{"location":"ElementaryMath/Trigonometry/Cotangent/","page":"Cotangent","title":"Cotangent","text":"Base.cot\nBase.cotd\nBase.coth\nBase.acot\nBase.acotd\nBase.acoth","category":"page"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.cot","page":"Cotangent","title":"Base.Math.cot","text":"cot(x)\n\nCompute the cotangent of x, where x is in radians.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.cotd","page":"Cotangent","title":"Base.Math.cotd","text":"cotd(x)\n\nCompute the cotangent of x, where x is in degrees.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.coth","page":"Cotangent","title":"Base.Math.coth","text":"coth(x)\n\nCompute the hyperbolic cotangent of x.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.acot","page":"Cotangent","title":"Base.Math.acot","text":"acot(x)\n\nCompute the inverse cotangent of x, where the output is in radians. \n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.acotd","page":"Cotangent","title":"Base.Math.acotd","text":"acotd(x)\n\nCompute the inverse cotangent of x, where the output is in degrees. If x is a matrix, x needs to be a square matrix.\n\ncompat: Julia 1.7\nMatrix arguments require Julia 1.7 or later.\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Trigonometry/Cotangent/#Base.Math.acoth","page":"Cotangent","title":"Base.Math.acoth","text":"acoth(x)\n\nCompute the inverse hyperbolic cotangent of x. \n\n\n\n\n\n","category":"function"},{"location":"Packages/Geometry/#Special-Function-Pkg","page":"Special Function Pkg","title":"Special Function Pkg","text":"","category":"section"},{"location":"Packages/Geometry/","page":"Special Function Pkg","title":"Special Function Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Geometry/","page":"Special Function Pkg","title":"Special Function Pkg","text":"🔗special functions - JuliaHub\n🔗special functions - Github","category":"page"},{"location":"Packages/Geometry/#Bessels.jl","page":"Special Function Pkg","title":"Bessels.jl","text":"","category":"section"},{"location":"Packages/Geometry/","page":"Special Function Pkg","title":"Special Function Pkg","text":"🔗JuliaMath/Bessels.jl – Bessel functions for real arguments and orders","category":"page"},{"location":"Packages/Geometry/","page":"Special Function Pkg","title":"Special Function Pkg","text":"Numerical routines for computing Bessel, Airy, and Hankel functions for real arguments. These routines are written in the Julia programming language and are self contained without any external dependencies.","category":"page"},{"location":"Packages/Geometry/#Implementation-in-Other-Software","page":"Special Function Pkg","title":"Implementation in Other Software","text":"","category":"section"},{"location":"Packages/Geometry/","page":"Special Function Pkg","title":"Special Function Pkg","text":"Software Index - DLMF\nPython\nSciPy: 🔗Special Functions (scipy.special) - SciPy Manual\nmpmath: 🔗Mathematical functions — mpmath documentation\nSymPy: 🔗Special - SymPy Documentation\nSage: 🔗Built-in Functions\nMatlab: 🔗Special Functions - MATLAB & Simulink\nOctave: 🔗Special Functions - GNU Octave\nMathematica: 🔗Special Functions - Wolfram Language Documentation\nMaple: 🔗Special Functions: Example Worksheet - Maple Help\nSysLab: 🔗初等数学: 特殊函数 | Syslab 使用手册","category":"page"},{"location":"ElementaryMath/Exp-and-Log/log/#Log","page":"Log","title":"Log","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/log/","page":"Log","title":"Log","text":"Base.log","category":"page"},{"location":"ElementaryMath/Exp-and-Log/log/#Base.log","page":"Log","title":"Base.log","text":"log(b,x)\n\nCompute the base b logarithm of x. Throws DomainError for negative Real arguments.\n\nExamples\n\njulia> log(4,8)\n1.5\n\njulia> log(4,2)\n0.5\n\njulia> log(-2, 3)\nERROR: DomainError with -2.0:\nlog was called with a negative real argument but will only return a complex result if called with a complex argument. Try log(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at ./math.jl:31\n[...]\n\njulia> log(2, -3)\nERROR: DomainError with -3.0:\nlog was called with a negative real argument but will only return a complex result if called with a complex argument. Try log(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at ./math.jl:31\n[...]\n\nnote: Note\nIf b is a power of 2 or 10, log2 or log10 should be used, as these will typically be faster and more accurate. For example,julia> log(100,1000000)\n2.9999999999999996\n\njulia> log10(1000000)/2\n3.0\n\n\n\n\n\nlog(x)\n\nCompute the natural logarithm of x.\n\nThrows DomainError for negative Real arguments. Use complex arguments to obtain complex results. Has a branch cut along the negative real axis, for which -0.0im is taken to be below the axis.\n\nSee also ℯ, log1p, log2, log10.\n\nExamples\n\njulia> log(2)\n0.6931471805599453\n\njulia> log(-3)\nERROR: DomainError with -3.0:\nlog was called with a negative real argument but will only return a complex result if called with a complex argument. Try log(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at ./math.jl:31\n[...]\n\njulia> log(-3 + 0im)\n1.0986122886681098 + 3.141592653589793im\n\njulia> log(-3 - 0.0im)\n1.0986122886681098 - 3.141592653589793im\n\njulia> log.(exp.(-1:1))\n3-element Vector{Float64}:\n -1.0\n  0.0\n  1.0\n\n\n\n\n\n","category":"function"},{"location":"ElementaryMath/Exp-and-Log/log/#Complex-Plane","page":"Log","title":"Complex Plane","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/log/","page":"Log","title":"Log","text":"🔗 WikiPedia: https://en.wikipedia.org/wiki/Complexlogarithm#/media/File:Complexlog_domain.svg\n🔗 Sage: https://doc.sagemath.org/html/en/reference/plotting/sage/plot/complex_plot.html#codecell6","category":"page"},{"location":"ElementaryMath/Exp-and-Log/log/","page":"Log","title":"Log","text":"using UnicodePlots\n\nX = repeat(collect(-20:20)', outer=(41, 1));\nY = repeat(collect(20:-1:-20), outer=(1,41));\ngrid = complex.(X, Y) ./ 10;\nZ = log.(grid);\nzangle = angle.(Z);\nheatmap(zangle; xfact=0.1, yfact=0.1, xoffset=-2, yoffset=-2)","category":"page"},{"location":"ElementaryMath/Arithmetic/Transpose/#Transpose","page":"Transpose","title":"Transpose","text":"","category":"section"},{"location":"ElementaryMath/Arithmetic/Transpose/","page":"Transpose","title":"Transpose","text":"Base.transpose","category":"page"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Exponents-and-Logarithms","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Exponents","page":"Exponents and Logarithms","title":"Exponents","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"exp\nexpm1\nexp2\nexp10","category":"page"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Logarithms","page":"Exponents and Logarithms","title":"Logarithms","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"log\nlog2\nlog10\nlog1p","category":"page"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Power","page":"Exponents and Logarithms","title":"Power","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"ispow2\nprevpow\nnextpow\npowermod","category":"page"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Root","page":"Exponents and Logarithms","title":"Root","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"sqrt\nisqrt\ncbrt","category":"page"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/#Float-Point","page":"Exponents and Logarithms","title":"Float Point","text":"","category":"section"},{"location":"ElementaryMath/Exp-and-Log/exp-and-log/","page":"Exponents and Logarithms","title":"Exponents and Logarithms","text":"exponent\nfrexp\nldexp","category":"page"},{"location":"Packages/Interpolation/#Interpolation-Pkg","page":"Interpolation Pkg","title":"Interpolation Pkg","text":"","category":"section"},{"location":"Packages/Interpolation/","page":"Interpolation Pkg","title":"Interpolation Pkg","text":"Search Result:","category":"page"},{"location":"Packages/Interpolation/","page":"Interpolation Pkg","title":"Interpolation Pkg","text":"🔗#interpolation - JuliaHub\n🔗#interpolation - Github","category":"page"}]
}
